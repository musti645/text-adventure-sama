{"version":3,"file":"text-adventure-sama.js","sources":["../../../projects/text-adventure-sama/src/lib/models/command.model.ts","../../../projects/text-adventure-sama/src/lib/services/item-event.service.ts","../../../projects/text-adventure-sama/src/lib/models/inventory.model.ts","../../../projects/text-adventure-sama/src/lib/models/errors/game.error.ts","../../../projects/text-adventure-sama/src/lib/services/scene-event.service.ts","../../../projects/text-adventure-sama/src/lib/models/stage.model.ts","../../../projects/text-adventure-sama/src/lib/models/game.model.ts","../../../projects/text-adventure-sama/src/lib/builder/base.builder.ts","../../../projects/text-adventure-sama/src/lib/models/Item.model.ts","../../../projects/text-adventure-sama/src/lib/models/errors/builder.error.ts","../../../projects/text-adventure-sama/src/lib/builder/item.builder.ts","../../../projects/text-adventure-sama/src/lib/builder/inventory.builder.ts","../../../projects/text-adventure-sama/src/lib/models/scene.model.ts","../../../projects/text-adventure-sama/src/lib/builder/action-builders/base-action.builder.ts","../../../projects/text-adventure-sama/src/lib/models/interactions/interaction-type.enum.ts","../../../projects/text-adventure-sama/src/lib/models/actions/action.model.ts","../../../projects/text-adventure-sama/src/lib/models/actions/one-time-action.model.ts","../../../projects/text-adventure-sama/src/lib/models/events/item-yielding-action.event.ts","../../../projects/text-adventure-sama/src/lib/models/actions/item-yielding-action.model.ts","../../../projects/text-adventure-sama/src/lib/models/events/gateway-action.event.ts","../../../projects/text-adventure-sama/src/lib/models/actions/gateway-action.model.ts","../../../projects/text-adventure-sama/src/lib/builder/action-builders/gateway-action.builder.ts","../../../projects/text-adventure-sama/src/lib/models/events/item-consuming-action.event.ts","../../../projects/text-adventure-sama/src/lib/models/actions/item-consuming-action.model.ts","../../../projects/text-adventure-sama/src/lib/builder/action-builders/item-consuming-action.builder.ts","../../../projects/text-adventure-sama/src/lib/models/events/item-removing-action.event.ts","../../../projects/text-adventure-sama/src/lib/models/actions/item-removing-action.model.ts","../../../projects/text-adventure-sama/src/lib/builder/action-builders/item-removing-action.builder.ts","../../../projects/text-adventure-sama/src/lib/builder/action-builders/item-yielding-action.builder.ts","../../../projects/text-adventure-sama/src/lib/models/actions/multi-time-action.model.ts","../../../projects/text-adventure-sama/src/lib/builder/action-builders/multi-time-action.builder.ts","../../../projects/text-adventure-sama/src/lib/models/actions/random-response-action.model.ts","../../../projects/text-adventure-sama/src/lib/builder/action-builders/random-response-action.builder.ts","../../../projects/text-adventure-sama/src/lib/builder/action-builders/one-time-action.builder.ts","../../../projects/text-adventure-sama/src/lib/builder/scene.builder.ts","../../../projects/text-adventure-sama/src/lib/services/id-generator.service.ts","../../../projects/text-adventure-sama/src/lib/builder/command.builder.ts","../../../projects/text-adventure-sama/src/lib/builder/game.builder.ts","../../../projects/text-adventure-sama/src/lib/models/other/text-input.enum.ts","../../../projects/text-adventure-sama/src/lib/models/other/text-input.model.ts","../../../projects/text-adventure-sama/src/lib/models/other/parse-input-result.model.ts","../../../projects/text-adventure-sama/src/lib/services/input-parser.service.ts","../../../projects/text-adventure-sama/src/lib/services/classification-trainer.service.ts","../../../projects/text-adventure-sama/src/lib/models/events/game-reset.event.ts","../../../projects/text-adventure-sama/src/lib/models/events/game-end.event.ts","../../../projects/text-adventure-sama/src/lib/models/events/game-start.event.ts","../../../projects/text-adventure-sama/src/lib/text-adventure/text-adventure.component.ts","../../../projects/text-adventure-sama/src/lib/text-adventure/text-adventure.module.ts","../../../projects/text-adventure-sama/src/public-api.ts","../../../projects/text-adventure-sama/src/text-adventure-sama.ts"],"names":["_.cloneDeep","InGameItem","natural.WordTokenizer","natural.Lexicon","natural.RuleSet","natural.BrillPOSTagger","natural.BayesClassifier","natural.DamerauLevenshteinDistance"],"mappings":"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","sourcesContent":["/**\r\n * Global commands within the game that are evaluated before all of the other elements\r\n */\r\nexport class Command {\r\n    private Trigger: string;\r\n    private Response: string;\r\n    private ResponseFunction: () => string;\r\n    private UseTypeWritingAnimation: boolean;\r\n    private Description: string;\r\n\r\n    public activate(): string {\r\n        if (this.Response) {\r\n            return this.Response;\r\n        } else {\r\n            return this.ResponseFunction();\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public setTrigger(trigger: string): void {\r\n        this.Trigger = trigger;\r\n    }\r\n\r\n    public getTrigger(): string {\r\n        return this.Trigger;\r\n    }\r\n\r\n    public setResponse(response: string): void {\r\n        this.Response = response;\r\n    }\r\n\r\n    public getResponse(): string {\r\n        return this.Response;\r\n    }\r\n\r\n    public setResponseFunction(func: () => string): void {\r\n        this.ResponseFunction = func;\r\n    }\r\n\r\n    public getResponseFunction(): () => string {\r\n        return this.ResponseFunction;\r\n    }\r\n\r\n    public setUseTypeWritingAnimation(use: boolean): void {\r\n        this.UseTypeWritingAnimation = use;\r\n    }\r\n\r\n    public getUseTypeWritingAnimation(): boolean {\r\n        return this.UseTypeWritingAnimation;\r\n    }\r\n\r\n    public getDescription(): string {\r\n        return this.Description;\r\n    }\r\n\r\n    public setDescription(desc: string): void {\r\n        this.Description = desc;\r\n    }\r\n\r\n}\r\n","import { ItemConsumingActionEvent, IItemConsumingEventService } from '../models/events/item-consuming-action.event';\r\nimport { ItemYieldingActionEvent, IItemYieldingEventService } from '../models/events/item-yielding-action.event';\r\nimport { ItemRemovingActionEvent, IItemRemovingEventService } from '../models/events/item-removing-action.event';\r\nimport { Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Singleton Service handling Item Events\r\n */\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ItemEventService implements IItemRemovingEventService,\r\n    IItemYieldingEventService,\r\n    IItemConsumingEventService {\r\n\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    private static Instance: ItemEventService = undefined;\r\n\r\n    private ItemConsumingActionEventSource = new Subject<ItemConsumingActionEvent>();\r\n    private ItemYieldingActionEventSource = new Subject<ItemYieldingActionEvent>();\r\n    private ItemRemovingActionEventSource = new Subject<ItemRemovingActionEvent>();\r\n\r\n    public ItemConsumingActionEvent$ = this.ItemConsumingActionEventSource.asObservable();\r\n    public ItemYieldingActionEvent$ = this.ItemYieldingActionEventSource.asObservable();\r\n    public ItemRemovingActionEvent$ = this.ItemRemovingActionEventSource.asObservable();\r\n\r\n    public static getInstance(): ItemEventService {\r\n        if (!ItemEventService.Instance) {\r\n            ItemEventService.Instance = new ItemEventService();\r\n        }\r\n\r\n        return ItemEventService.Instance;\r\n    }\r\n\r\n    public consumeItem(event: ItemConsumingActionEvent): void {\r\n        this.ItemConsumingActionEventSource.next(event);\r\n    }\r\n\r\n    public yieldItem(event: ItemYieldingActionEvent): void {\r\n        this.ItemYieldingActionEventSource.next(event);\r\n    }\r\n\r\n    public removeItem(event: ItemRemovingActionEvent): void {\r\n        this.ItemRemovingActionEventSource.next(event);\r\n    }\r\n\r\n}\r\n","import { InGameItem } from './Item.model';\r\nimport { ItemEventService } from '../services/item-event.service';\r\nimport { IItemConsumingEventListener, ItemConsumingActionEvent } from '../models/events/item-consuming-action.event';\r\nimport { IItemRemovingEventListener, ItemRemovingActionEvent } from '../models/events/item-removing-action.event';\r\nimport { IItemYieldingEventListener, ItemYieldingActionEvent } from '../models/events/item-yielding-action.event';\r\nimport * as _ from 'lodash';\r\n\r\nexport class Inventory implements IItemConsumingEventListener,\r\n    IItemRemovingEventListener,\r\n    IItemYieldingEventListener {\r\n    private Items: InGameItem[];\r\n\r\n    constructor() {\r\n        this.Items = [];\r\n\r\n        ItemEventService.getInstance().ItemYieldingActionEvent$.subscribe((event) => this.OnItemYield(event));\r\n        ItemEventService.getInstance().ItemRemovingActionEvent$.subscribe((event) => this.OnItemRemove(event));\r\n        ItemEventService.getInstance().ItemConsumingActionEvent$.subscribe((event) => this.OnItemConsume(event));\r\n    }\r\n\r\n    OnItemYield(event: ItemYieldingActionEvent): void {\r\n        if (event.ResetItemUsagesToMaximum) {\r\n            event.Item.resetUsages();\r\n        }\r\n\r\n        for (let i = 0; i < event.AmountOfItems; i++) {\r\n            // create a deep copy of the item (we also need the functions to be copied)\r\n            this.addItem(_.cloneDeep(event.Item));\r\n        }\r\n    }\r\n\r\n    OnItemRemove(event: ItemRemovingActionEvent): void {\r\n        this.removeItemFromInventory(event.Item.getID());\r\n    }\r\n\r\n    OnItemConsume(event: ItemConsumingActionEvent): void {\r\n        const items = this.findItemsById(event.Item.getID());\r\n        items[0].use();\r\n    }\r\n\r\n    public findItemsById(id: number): InGameItem[] {\r\n        return this.Items.filter(o => o.getID() === id);\r\n    }\r\n\r\n    public findItemsByName(name: string): InGameItem[] {\r\n        return this.Items.filter(o => o.getName() === name);\r\n    }\r\n\r\n    public removeItemFromInventory(id: number): void {\r\n        this.Items = this.Items.filter(o => o.getID() !== id);\r\n    }\r\n\r\n    public getItemCount(): number {\r\n        return this.Items.length;\r\n    }\r\n\r\n    public addItem(toAdd: InGameItem): void {\r\n        toAdd.WasPickedUp = true;\r\n        this.Items.push(toAdd);\r\n    }\r\n\r\n    public getItems(): InGameItem[] {\r\n        return this.Items;\r\n    }\r\n\r\n}\r\n","export class GameError extends Error {\r\n    constructor(m: string) {\r\n        super(m);\r\n\r\n        Object.setPrototypeOf(this, GameError.prototype);\r\n    }\r\n}\r\n","import { IGatewayActionEventService, GatewayActionEvent } from '../models/events/gateway-action.event';\r\nimport { Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Singleton Service handling Scene Events\r\n */\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SceneEventService implements IGatewayActionEventService {\r\n\r\n    private constructor() {\r\n    }\r\n\r\n    private static Instance: SceneEventService = undefined;\r\n\r\n    private GatewayActionEventSource = new Subject<GatewayActionEvent>();\r\n\r\n    public GatewayActionEvent$ = this.GatewayActionEventSource.asObservable();\r\n\r\n    public static getInstance(): SceneEventService {\r\n        if (!SceneEventService.Instance) {\r\n            SceneEventService.Instance = new SceneEventService();\r\n        }\r\n\r\n        return SceneEventService.Instance;\r\n    }\r\n\r\n    public changeScene(event: GatewayActionEvent): void {\r\n        this.GatewayActionEventSource.next(event);\r\n    }\r\n}\r\n","import { Scene } from './scene.model';\r\nimport { GameError } from '../models/errors/game.error';\r\nimport { SceneEventService } from '../services/scene-event.service';\r\nimport { IGatewayActionEventListener, GatewayActionEvent } from '../models/events/gateway-action.event';\r\n\r\n/**\r\n * The Stage contains all scenes (including a pointer to the current scene).\r\n * It also manages the transition between scenes.\r\n */\r\nexport class Stage implements IGatewayActionEventListener {\r\n    private Scenes: Scene[];\r\n    private CurrentScene: Scene;\r\n    // path the user took through the scenes\r\n    private ScenePath: number[];\r\n\r\n    constructor() {\r\n        this.ScenePath = [];\r\n        this.Scenes = [];\r\n\r\n        SceneEventService.getInstance().GatewayActionEvent$.subscribe((event) => this.OnSceneChange(event));\r\n    }\r\n\r\n    OnSceneChange(event: GatewayActionEvent): void {\r\n        this.goToScene(event.TargetSceneID);\r\n    }\r\n\r\n    public getCurrentScene(): Scene {\r\n        if (!this.CurrentScene) {\r\n            this.CurrentScene = this.Scenes[0];\r\n        }\r\n        return this.CurrentScene;\r\n    }\r\n\r\n    public goToScene(id: number): Scene {\r\n        const nextScene = this.Scenes.find(s => s.getID() === id);\r\n        if (!nextScene) {\r\n            throw new GameError('Scene could not be found.');\r\n        }\r\n\r\n        this.ScenePath.push(id);\r\n\r\n        this.CurrentScene = nextScene;\r\n        return this.CurrentScene;\r\n    }\r\n\r\n    public addScene(toAdd: Scene): void {\r\n        this.Scenes.push(toAdd);\r\n    }\r\n\r\n    public getScenesCount(): number {\r\n        return this.Scenes.length;\r\n    }\r\n\r\n    public getScenes(): Scene[] {\r\n        return this.Scenes;\r\n    }\r\n}\r\n","import { Action } from './actions/action.model';\r\nimport { Command } from './command.model';\r\nimport { Inventory } from './inventory.model';\r\nimport { InGameItem } from './Item.model';\r\nimport { Stage } from './stage.model';\r\n\r\n/**\r\n * Represents the Game.\r\n */\r\nexport class Game {\r\n    private Title: string;\r\n    private Introduction: string;\r\n    private ItemNotFoundInInventoryResponse: string;\r\n    private ItemAddedToInventoryResponse: string;\r\n    private GatewayTargetNotFoundResponse: string;\r\n    private InventoryEmptyResponse: string;\r\n    private Stage: Stage;\r\n    private Inventory: Inventory;\r\n    private Commands: Command[];\r\n\r\n    constructor() {\r\n        this.Stage = new Stage();\r\n        this.Inventory = new Inventory();\r\n        this.Commands = [];\r\n        this.initializeCommands();\r\n    }\r\n\r\n    private initializeCommands(): void {\r\n        const helpCommand = new Command();\r\n        helpCommand.setTrigger('help');\r\n        helpCommand.setDescription('A list of all global commands');\r\n        helpCommand.setUseTypeWritingAnimation(false);\r\n        helpCommand.setResponseFunction(() => {\r\n            let commandsHelp = '';\r\n            this.Commands.forEach(command => {\r\n                commandsHelp += `${command.getTrigger()} - ${command.getDescription()} \\r\\n `;\r\n            });\r\n            return commandsHelp;\r\n        });\r\n        this.Commands.push(helpCommand);\r\n\r\n\r\n        const inventoryCommand = new Command();\r\n        inventoryCommand.setTrigger('inventory');\r\n        inventoryCommand.setDescription('List all items in your inventory.');\r\n        inventoryCommand.setUseTypeWritingAnimation(false);\r\n        inventoryCommand.setResponseFunction(() => {\r\n            if (this.Inventory.getItemCount() <= 0) {\r\n                return this.InventoryEmptyResponse;\r\n            }\r\n            let inventoryContents = 'Items in Inventory: \\r\\n ';\r\n            this.Inventory.getItems().forEach(item => {\r\n                inventoryContents += `${item.getName()} \\r\\n `;\r\n            });\r\n            return inventoryContents;\r\n        });\r\n        this.Commands.push(inventoryCommand);\r\n\r\n\r\n        const sceneCommand = new Command();\r\n        sceneCommand.setTrigger('look around');\r\n        sceneCommand.setDescription('Get a description of the scene you\\'re in');\r\n        sceneCommand.setUseTypeWritingAnimation(true);\r\n        sceneCommand.setResponseFunction(() => {\r\n            let description = this.Stage.getCurrentScene().getDescription();\r\n            for (const item of this.Stage.getCurrentScene().getItems()) {\r\n                description += ` ${item.getInSceneDescription()}`;\r\n            }\r\n            return description;\r\n        });\r\n\r\n        this.Commands.push(sceneCommand);\r\n    }\r\n\r\n    public getStage(): Stage {\r\n        return this.Stage;\r\n    }\r\n\r\n    public getInventory(): Inventory {\r\n        return this.Inventory;\r\n    }\r\n\r\n    public setInventory(inventory: Inventory): void {\r\n        this.Inventory = inventory;\r\n    }\r\n\r\n    public getScenesCount(): number {\r\n        return this.Stage.getScenesCount();\r\n    }\r\n\r\n    public getTitle(): string {\r\n        return this.Title;\r\n    }\r\n\r\n    public setTitle(title: string): void {\r\n        this.Title = title;\r\n    }\r\n\r\n    public getIntroduction(): string {\r\n        return this.Introduction;\r\n    }\r\n\r\n    public setIntroduction(intro: string): void {\r\n        this.Introduction = intro;\r\n    }\r\n\r\n    public getCommands(): Command[] {\r\n        return this.Commands;\r\n    }\r\n\r\n    public setCommands(commands: Command[]): void {\r\n        this.Commands = commands;\r\n    }\r\n\r\n    public getItemNotFoundResponse(): string {\r\n        return this.Stage.getCurrentScene().getItemNotFoundResponse();\r\n    }\r\n\r\n    public getInvalidInputResponse(): string {\r\n        return this.Stage.getCurrentScene().getInvalidInputResponse();\r\n    }\r\n\r\n    public getActionNotRecognizedResponse(): string {\r\n        return this.Stage.getCurrentScene().getActionNotRecognizedResponse();\r\n    }\r\n\r\n    public getSceneDescription(): string {\r\n        return this.Stage.getCurrentScene().getDescription();\r\n    }\r\n\r\n    public getItemNotFoundInInventoryResponse(): string {\r\n        return this.ItemNotFoundInInventoryResponse;\r\n    }\r\n\r\n    public setItemNotFoundInInventoryResponse(response: string): void {\r\n        this.ItemNotFoundInInventoryResponse = response;\r\n    }\r\n\r\n    public getActionsInScene(): Action[] {\r\n        return this.Stage.getCurrentScene().getActions();\r\n    }\r\n\r\n    public getItemsInScene(): InGameItem[] {\r\n        return this.Stage.getCurrentScene().getItems();\r\n    }\r\n\r\n    public getItemsInInventory(): InGameItem[] {\r\n        return this.Inventory.getItems();\r\n    }\r\n\r\n    public removeItemFromScene(item: InGameItem): void {\r\n        this.Stage.getCurrentScene().removeItemFromScene(item);\r\n    }\r\n\r\n    public addItemToInventory(item: InGameItem): void {\r\n        this.Inventory.addItem(item);\r\n    }\r\n\r\n    public removeItemFromInventory(item: InGameItem): void {\r\n        this.Inventory.removeItemFromInventory(item.getID());\r\n    }\r\n\r\n    public getItemAddedToInventoryResponse(): string {\r\n        return this.ItemAddedToInventoryResponse;\r\n    }\r\n\r\n    public setItemAddedToInventoryResponse(response: string): void {\r\n        this.ItemAddedToInventoryResponse = response;\r\n    }\r\n\r\n    public getGatewayTargetNotFoundResponse(): string {\r\n        return this.GatewayTargetNotFoundResponse;\r\n    }\r\n\r\n    public setGatewayTargetNotFoundResponse(response: string): void {\r\n        this.GatewayTargetNotFoundResponse = response;\r\n    }\r\n\r\n    public getInventoryEmptyResponse(): string {\r\n        return this.InventoryEmptyResponse;\r\n    }\r\n\r\n    public setInventoryEmptyResponse(response: string): void {\r\n        this.InventoryEmptyResponse = response;\r\n    }\r\n}\r\n","export abstract class BaseBuilder {\r\n    /**\r\n     * Finishes the Building Process of this Builder\r\n     */\r\n    public abstract finish(): any;\r\n}\r\n","import { Inventory } from './inventory.model';\r\nimport { Scene } from './scene.model';\r\n\r\n/**\r\n * This class represents an Item in the game.\r\n */\r\nexport class InGameItem {\r\n    private ID: number;\r\n    private Name: string;\r\n    private Description: string;\r\n    private MaximumUsages: number;\r\n\r\n    private UsagesLeft: number;\r\n\r\n    private ItemUsedResponse: string;\r\n    private NoUsagesLeftResponse: string;\r\n\r\n    private CanPickUp: boolean;\r\n    private CannotPickUpResponse: string;\r\n    public WasPickedUp: boolean;\r\n\r\n    private InSceneDescription: string;\r\n\r\n    private CannotUseItemResponse: string;\r\n    public CanUseFunction(item: this, currentScene: Scene, inventory: Inventory): boolean {\r\n        return true;\r\n    }\r\n\r\n\r\n    constructor(id?: number) {\r\n        this.ID = id;\r\n        this.CanPickUp = true;\r\n    }\r\n\r\n    public use(): string {\r\n        if (this.UsagesLeft >= 1) {\r\n            this.UsagesLeft--;\r\n            return this.ItemUsedResponse;\r\n        }\r\n        return this.NoUsagesLeftResponse;\r\n    }\r\n\r\n\r\n    public resetUsages(): void {\r\n        this.UsagesLeft = this.MaximumUsages;\r\n    }\r\n\r\n    public setID(id: number): void {\r\n        this.ID = id;\r\n    }\r\n\r\n    public getID(): number {\r\n        return this.ID;\r\n    }\r\n\r\n    public setName(name: string): void {\r\n        this.Name = name;\r\n    }\r\n\r\n    public getName(): string {\r\n        return this.Name;\r\n    }\r\n\r\n    public setDescription(desc: string): void {\r\n        this.Description = desc;\r\n    }\r\n\r\n    public getDescription(): string {\r\n        return this.Description;\r\n    }\r\n\r\n    public setMaximumUsages(usages: number): void {\r\n        this.MaximumUsages = usages;\r\n    }\r\n\r\n    public getMaximumUsages(): number {\r\n        return this.MaximumUsages;\r\n    }\r\n\r\n    public setUsagesLeft(usages: number): void {\r\n        this.UsagesLeft = usages;\r\n    }\r\n\r\n    public getUsagesLeft(): number {\r\n        return this.UsagesLeft;\r\n    }\r\n\r\n    public setItemUsedResponse(response: string): void {\r\n        this.ItemUsedResponse = response;\r\n    }\r\n\r\n    public getItemUsedResponse(): string {\r\n        return this.ItemUsedResponse;\r\n    }\r\n\r\n    public setNoUsagesLeftResponse(response: string): void {\r\n        this.NoUsagesLeftResponse = response;\r\n    }\r\n\r\n    public getNoUsagesLeftResponse(): string {\r\n        return this.NoUsagesLeftResponse;\r\n    }\r\n\r\n    public getCanPickUp(): boolean {\r\n        return this.CanPickUp;\r\n    }\r\n\r\n    public setCanPickUp(value: boolean): void {\r\n        this.CanPickUp = value;\r\n    }\r\n\r\n    public setCannotPickUpResponse(response: string): void {\r\n        this.CannotPickUpResponse = response;\r\n    }\r\n\r\n    public getCannotPickUpResponse(): string {\r\n        return this.CannotPickUpResponse;\r\n    }\r\n\r\n    public getInSceneDescription(): string {\r\n        return this.InSceneDescription;\r\n    }\r\n\r\n    public setInSceneDescription(descr: string): void {\r\n        this.InSceneDescription = descr;\r\n    }\r\n\r\n    public setCanUseFunction(func: (item: this, currentScene: Scene, inventory: Inventory) => boolean): void {\r\n        this.CanUseFunction = func;\r\n    }\r\n\r\n    public setCannotUseItemResponse(response: string): void {\r\n        this.CannotUseItemResponse = response;\r\n    }\r\n\r\n    public getCannotUseItemResponse(): string {\r\n        return this.CannotUseItemResponse;\r\n    }\r\n\r\n    public getCanUseFunction(): (item: this, currentScene: Scene, inventory: Inventory) => boolean {\r\n        return this.CanUseFunction;\r\n    }\r\n\r\n}\r\n","export class BuilderError extends Error {\r\n    constructor(m: string) {\r\n        super(m);\r\n\r\n        Object.setPrototypeOf(this, BuilderError.prototype);\r\n    }\r\n}\r\n","import { InGameItem } from '../models/Item.model';\r\nimport { ItemContainingBuilder } from './interfaces/item-containing.builder';\r\nimport { BaseBuilder } from './base.builder';\r\nimport { BuilderError } from '../models/errors/builder.error';\r\nimport { Scene } from '../models/scene.model';\r\nimport { Inventory } from '../models/inventory.model';\r\n\r\nexport class ItemBuilder<ReturnBuilderType extends ItemContainingBuilder> extends BaseBuilder {\r\n    protected Item: InGameItem;\r\n    private Builder: ReturnBuilderType;\r\n    private RequireInSceneDescription: boolean;\r\n    private IsCanUseFunctionReplaced: boolean;\r\n\r\n    constructor(builder: ReturnBuilderType, item: InGameItem = new InGameItem(), requireInSceneDescription: boolean = false) {\r\n        super();\r\n        this.Item = item;\r\n        this.Builder = builder;\r\n        this.RequireInSceneDescription = requireInSceneDescription;\r\n    }\r\n\r\n    public setName(name: string): this {\r\n        if (!name) {\r\n            throw new EvalError('Name was undefined');\r\n        }\r\n\r\n        this.Item.setName(name);\r\n        return this;\r\n    }\r\n\r\n    public setDescription(description: string): this {\r\n        if (!description) {\r\n            throw new EvalError('Description was undefined');\r\n        }\r\n\r\n        this.Item.setDescription(description);\r\n        return this;\r\n    }\r\n\r\n    public setMaximumUsages(maxUsages: number): this {\r\n        if (maxUsages === undefined || maxUsages <= 0) {\r\n            throw new EvalError('MaximumUsages Value has to be greater than 0.');\r\n        }\r\n\r\n        if (this.Item.getUsagesLeft() && this.Item.getUsagesLeft() > maxUsages) {\r\n            throw new EvalError('MaximumUsages Value has to be greater or equal to the UsagesLeft Value');\r\n        }\r\n\r\n        this.Item.setMaximumUsages(maxUsages);\r\n        return this;\r\n    }\r\n\r\n    public setUsagesLeft(usagesLeft: number): this {\r\n        if (usagesLeft === undefined || usagesLeft === null || usagesLeft < 0) {\r\n            throw new EvalError('UsagesLeft Value has to be greater than or equal to 0.');\r\n        }\r\n\r\n        if (this.Item.getMaximumUsages() && usagesLeft > this.Item.getMaximumUsages()) {\r\n            throw new EvalError('UsagesLeft Value has to be less or equal to the MaximumUsages Value.');\r\n        }\r\n\r\n        this.Item.setUsagesLeft(usagesLeft);\r\n        return this;\r\n    }\r\n\r\n    public setItemUsedResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('ItemUsedResponse was undefined.');\r\n        }\r\n\r\n        this.Item.setItemUsedResponse(response);\r\n        return this;\r\n    }\r\n\r\n\r\n    public setNoUsagesLeftResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('NoUsagesLeftResponse was undefined.');\r\n        }\r\n\r\n        this.Item.setNoUsagesLeftResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public setCanPickUp(value: boolean): this {\r\n        this.Item.setCanPickUp(value);\r\n        return this;\r\n    }\r\n\r\n    public setCannotPickUpResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('CannotPickUpResponse was undefined.');\r\n        }\r\n\r\n        this.Item.setCannotPickUpResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public setInSceneDescription(descr: string): this {\r\n        if (!descr) {\r\n            throw new EvalError('InSceneDescription was undefined.');\r\n        }\r\n\r\n        this.Item.setInSceneDescription(descr);\r\n        return this;\r\n    }\r\n\r\n    public setCanUseFunction(func: (item: InGameItem, currentScene: Scene, inventory: Inventory) => boolean): this {\r\n        if (!func) {\r\n            throw new EvalError('CanUseFunction was undefined.');\r\n        }\r\n\r\n        this.IsCanUseFunctionReplaced = true;\r\n        this.Item.setCanUseFunction(func);\r\n        return this;\r\n    }\r\n\r\n    public setCannotUseItemResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('CannotUseItemResponse was undefined');\r\n        }\r\n\r\n        this.Item.setCannotUseItemResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public finish(): ReturnBuilderType {\r\n        if (!this.Item.getName()) {\r\n            throw new BuilderError('Item creation could not be finished. Name was not set.');\r\n        }\r\n\r\n        if (!this.Item.getDescription()) {\r\n            throw new BuilderError('Item creation could not be finished. Description was not set.');\r\n        }\r\n\r\n        if (this.Item.getUsagesLeft() > 0 && !this.Item.getItemUsedResponse()) {\r\n            throw new BuilderError('Item creation could not be finished. ItemUsedResponse was not set.');\r\n        }\r\n\r\n        if (!this.Item.getNoUsagesLeftResponse()) {\r\n            throw new BuilderError('Item creation could not be finished. NoUsagesLeftResponse was not set.');\r\n        }\r\n\r\n        if (!this.Item.getCanPickUp() && !this.Item.getCannotPickUpResponse()) {\r\n            throw new BuilderError('Item creation could not be finished. CannotPickUpResponse was not set.');\r\n        }\r\n\r\n        // if this item is added to a scene, instead of the inventory or an action, the InSceneDescription has to be set.\r\n        if (this.RequireInSceneDescription && !this.Item.getInSceneDescription()) {\r\n            throw new BuilderError('Item creation could not be finished. InSceneDescription was not set.');\r\n        }\r\n\r\n        if (this.IsCanUseFunctionReplaced && !this.Item.getCannotUseItemResponse()) {\r\n            throw new BuilderError('Item creation could not be finished. CannotUseItemResponse was not set.');\r\n        }\r\n\r\n        if (this.Item.getMaximumUsages() < 0) {\r\n            this.Item.setMaximumUsages(1);\r\n        }\r\n\r\n        if (this.Item.getUsagesLeft() < 0) {\r\n            this.Item.setUsagesLeft(1);\r\n        }\r\n\r\n        this.Builder.addItemToBuilder(this.Item);\r\n        return this.Builder;\r\n    }\r\n}\r\n","import { GameBuilder } from './game.builder';\r\nimport { Game } from '../models/game.model';\r\nimport { Inventory } from '../models/inventory.model';\r\nimport { InGameItem } from '../models/Item.model';\r\nimport { BaseBuilder } from './base.builder';\r\nimport { ItemContainingBuilder } from './interfaces/item-containing.builder';\r\nimport { ItemBuilder } from './item.builder';\r\nimport { BuilderError } from '../models/errors/builder.error';\r\n\r\nexport class InventoryBuilder extends BaseBuilder implements ItemContainingBuilder {\r\n    private GameBuilder: GameBuilder;\r\n    private Game: Game;\r\n    protected Inventory: Inventory;\r\n\r\n    constructor(gameBuilder: GameBuilder, game: Game) {\r\n        super();\r\n        this.GameBuilder = gameBuilder;\r\n        this.Game = game;\r\n        this.Inventory = new Inventory();\r\n    }\r\n\r\n    public addItem(item?: InGameItem): ItemBuilder<InventoryBuilder> {\r\n        return new ItemBuilder<InventoryBuilder>(this, item);\r\n    }\r\n\r\n    addItemToBuilder(item: InGameItem): void {\r\n        if (!item) {\r\n            throw new BuilderError('Could not add Item to Inventory. Item was not set.');\r\n        }\r\n        this.Inventory.addItem(item);\r\n        if (item.getID()) {\r\n            this.GameBuilder.IdGeneratorService.addItemId(item);\r\n        }\r\n    }\r\n\r\n\r\n    public finish(): GameBuilder {\r\n        this.Game.setInventory(this.Inventory);\r\n        return this.GameBuilder;\r\n    }\r\n}\r\n","import { InGameItem } from './Item.model';\r\nimport { Action } from './actions/action.model';\r\n\r\n/**\r\n * A Scene is a container of actions and Items.\r\n * The player can only be inside one scene at a time.\r\n */\r\nexport class Scene {\r\n    private ID: number;\r\n    private Name: string;\r\n    private Description: string;\r\n\r\n    private ActionNotRecognizedResponse: string;\r\n    private ItemNotFoundResponse: string;\r\n    private InvalidInputResponse: string;\r\n\r\n    private Items: InGameItem[];\r\n    private Actions: Action[];\r\n\r\n    constructor(id?: number) {\r\n        this.ID = id;\r\n\r\n        this.Items = [];\r\n        this.Actions = [];\r\n    }\r\n\r\n    public setID(id: number): void {\r\n        this.ID = id;\r\n    }\r\n\r\n    public getID(): number {\r\n        return this.ID;\r\n    }\r\n\r\n    public getName(): string {\r\n        return this.Name;\r\n    }\r\n\r\n    public setName(name: string): void {\r\n        this.Name = name;\r\n    }\r\n\r\n    public getDescription(): string {\r\n        return this.Description;\r\n    }\r\n\r\n    public setDescription(descr: string): void {\r\n        this.Description = descr;\r\n    }\r\n\r\n    public getActionNotRecognizedResponse(): string {\r\n        return this.ActionNotRecognizedResponse;\r\n    }\r\n\r\n    public setActionNotRecognizedResponse(response: string): void {\r\n        this.ActionNotRecognizedResponse = response;\r\n    }\r\n\r\n    public getItemNotFoundResponse(): string {\r\n        return this.ItemNotFoundResponse;\r\n    }\r\n\r\n    public setItemNotFoundResponse(response: string): void {\r\n        this.ItemNotFoundResponse = response;\r\n    }\r\n\r\n    public getInvalidInputResponse(): string {\r\n        return this.InvalidInputResponse;\r\n    }\r\n\r\n    public setInvalidInputResponse(response: string): void {\r\n        this.InvalidInputResponse = response;\r\n    }\r\n\r\n    public getActions(): Action[] {\r\n        return this.Actions;\r\n    }\r\n\r\n    public getItems(): InGameItem[] {\r\n        return this.Items;\r\n    }\r\n\r\n    public removeItemFromScene(item: InGameItem): void {\r\n        const index = this.Items.indexOf(item);\r\n        if (index > -1) {\r\n            this.Items.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n","import { Action } from '../../models/actions/action.model';\r\nimport { ActionContainingBuilder } from '../interfaces/action-containing.builder';\r\nimport { BaseBuilder } from '../base.builder';\r\nimport { BuilderError } from '../../models/errors/builder.error';\r\n\r\nexport class BaseActionBuilder<T extends Action, ReturnBuilderType extends ActionContainingBuilder> extends BaseBuilder {\r\n    protected Action: T;\r\n    protected Builder: ReturnBuilderType;\r\n\r\n    constructor(builder: ReturnBuilderType, action: T) {\r\n        super();\r\n        this.Action = action;\r\n        this.Builder = builder;\r\n    }\r\n\r\n    public setTrigger(trigger: string): this {\r\n        if (!trigger || trigger === '') {\r\n            throw new EvalError('No Trigger found.');\r\n        }\r\n\r\n        this.Action.setTrigger(trigger);\r\n        return this;\r\n    }\r\n\r\n    public setResponse(response: string): this {\r\n        if (!response || response === '') {\r\n            throw new EvalError('No Response found.');\r\n        }\r\n\r\n        this.Action.setResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public setEndGameAction(): this {\r\n        this.Action.setIsEndGameAction(true);\r\n        return this;\r\n    }\r\n\r\n    public onFinish(): void {\r\n    }\r\n\r\n    public finish(): ReturnBuilderType {\r\n        if (!this.Action.getTrigger()) {\r\n            throw new BuilderError('Action creation could not be finished. Trigger was not set.');\r\n        }\r\n\r\n        if (!this.Action.getResponse()) {\r\n            throw new BuilderError('Action creation could not be finished. Response was not set.');\r\n        }\r\n\r\n        this.onFinish();\r\n\r\n        this.Builder.addActionToBuilder(this.Action);\r\n        return this.Builder;\r\n    }\r\n\r\n}\r\n","export enum InteractionType {\r\n    USE,\r\n    LOOK_AT,\r\n    GO_TO,\r\n    PICK_UP,\r\n    DO\r\n}\r\n","import { InteractionType } from '../interactions/interaction-type.enum';\r\n\r\n/**\r\n * Abstract Base class for all actions.\r\n */\r\n// Note: Actions don't have IDs, since they are triggered via their InteractionType and their Trigger\r\nexport abstract class Action {\r\n    private Trigger: string;\r\n    private Response: string;\r\n    private InteractionType: InteractionType;\r\n    private IsEndGameAction: boolean;\r\n\r\n    constructor() {\r\n        this.IsEndGameAction = false;\r\n    }\r\n\r\n    public abstract trigger(): string;\r\n\r\n    public abstract reset(): void;\r\n\r\n    public setTrigger(trigger: string): void {\r\n        this.Trigger = trigger;\r\n    }\r\n\r\n    public setInteractionType(type: InteractionType): void {\r\n        this.InteractionType = type;\r\n    }\r\n\r\n    public setResponse(response: string): void {\r\n        this.Response = response;\r\n    }\r\n\r\n    public setIsEndGameAction(endGameAction: boolean): void {\r\n        this.IsEndGameAction = endGameAction;\r\n    }\r\n\r\n    public getTrigger(): string {\r\n        return this.Trigger;\r\n    }\r\n\r\n    public getIsEndGameAction(): boolean {\r\n        return this.IsEndGameAction;\r\n    }\r\n\r\n    public getInteractionType(): InteractionType {\r\n        return this.InteractionType;\r\n    }\r\n\r\n    public getResponse(): string {\r\n        return this.Response;\r\n    }\r\n}\r\n","import { InteractionType } from '../interactions/interaction-type.enum';\r\nimport { Action } from './action.model';\r\n\r\n/**\r\n * A OneTimeAction is only triggered once\r\n * Each subsequent trigger returns the same response.\r\n */\r\nexport class OneTimeAction extends Action {\r\n    private WasTriggered: boolean;\r\n    private ResponseAfterUse: string;\r\n\r\n    constructor() {\r\n        super();\r\n        this.setInteractionType(InteractionType.DO);\r\n    }\r\n\r\n    public trigger(): string {\r\n        if (this.WasTriggered) {\r\n            return this.ResponseAfterUse;\r\n        }\r\n\r\n        this.WasTriggered = true;\r\n        return this.getResponse();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.WasTriggered = false;\r\n    }\r\n\r\n    public getWasTriggered(): boolean {\r\n        return this.WasTriggered;\r\n    }\r\n\r\n    public setWasTriggered(triggered: boolean): void {\r\n        this.WasTriggered = triggered;\r\n    }\r\n\r\n    public getResponseAfterUse(): string {\r\n        return this.ResponseAfterUse;\r\n    }\r\n\r\n    public setResponseAfterUse(response: string): void {\r\n        this.ResponseAfterUse = response;\r\n    }\r\n}\r\n","import { InGameItem } from '../Item.model';\r\nimport { ItemYieldingAction } from '../actions/item-yielding-action.model';\r\n\r\nexport class ItemYieldingActionEvent {\r\n    Item: InGameItem;\r\n    AmountOfItems: number;\r\n    ResetItemUsagesToMaximum: boolean;\r\n    Response: string;\r\n    ResponseAfterUse: string;\r\n    WasTriggered: boolean;\r\n\r\n    constructor(action: ItemYieldingAction){\r\n        this.Item = action.getItem();\r\n        this.Response = action.getResponse();\r\n        this.ResponseAfterUse = action.getResponseAfterUse();\r\n        this.WasTriggered = action.getWasTriggered();\r\n        this.AmountOfItems = action.getAmountOfItems();\r\n        this.ResetItemUsagesToMaximum = action.getResetItemUsagesToMaximum();\r\n    }\r\n}\r\n\r\n\r\nexport interface IItemYieldingEventService {\r\n    yieldItem(event: ItemYieldingActionEvent): void;\r\n}\r\n\r\nexport interface IItemYieldingEventListener {\r\n    OnItemYield(event: ItemYieldingActionEvent): void;\r\n}\r\n","import { OneTimeAction } from './one-time-action.model';\r\nimport { InGameItem } from '../Item.model';\r\nimport { ItemYieldingActionEvent } from '../events/item-yielding-action.event';\r\nimport { InteractionType } from '../interactions/interaction-type.enum';\r\nimport { ItemEventService } from '../../services/item-event.service';\r\n\r\n/**\r\n * An ItemYieldingAction is only triggered once and adds an Item to the players inventory.\r\n */\r\nexport class ItemYieldingAction extends OneTimeAction {\r\n    private Item: InGameItem;\r\n    private AmountOfItems: number;\r\n    private ResetItemUsagesToMaximum: boolean;\r\n\r\n    constructor() {\r\n        super();\r\n        this.AmountOfItems = 1;\r\n        this.setInteractionType(InteractionType.DO);\r\n    }\r\n\r\n    public trigger(): string {\r\n        // trigger addition of item to inventory\r\n        if (this.getWasTriggered()) {\r\n            return this.getResponseAfterUse();\r\n        }\r\n\r\n        ItemEventService.getInstance().yieldItem(new ItemYieldingActionEvent(this));\r\n\r\n        this.setWasTriggered(true);\r\n        return this.getResponse();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.setWasTriggered(false);\r\n    }\r\n\r\n    public getItem(): InGameItem {\r\n        return this.Item;\r\n    }\r\n\r\n    public setItem(item: InGameItem): void {\r\n        this.Item = item;\r\n    }\r\n\r\n    public setAmountOfItems(amount: number): void {\r\n        this.AmountOfItems = amount;\r\n    }\r\n\r\n    public getAmountOfItems(): number {\r\n        return this.AmountOfItems;\r\n    }\r\n\r\n    public getResetItemUsagesToMaximum(): boolean {\r\n        return this.ResetItemUsagesToMaximum;\r\n    }\r\n\r\n    public setResetItemUsagesToMaximum(reset: boolean): void {\r\n        this.ResetItemUsagesToMaximum = reset;\r\n    }\r\n}\r\n","import { GatewayAction } from '../actions/gateway-action.model';\r\n\r\nexport class GatewayActionEvent {\r\n    TargetSceneID: number;\r\n    TargetSceneName: string;\r\n\r\n    constructor(action: GatewayAction){\r\n        this.TargetSceneID = action.getTargetSceneId();\r\n        this.TargetSceneName = action.getTargetSceneName();\r\n    }\r\n}\r\n\r\nexport interface IGatewayActionEventService {\r\n    changeScene(event: GatewayActionEvent): void;\r\n}\r\n\r\nexport interface IGatewayActionEventListener {\r\n    OnSceneChange(event: GatewayActionEvent): void;\r\n}\r\n","import { Action } from './action.model';\r\nimport { GatewayActionEvent } from '../events/gateway-action.event';\r\nimport { InteractionType } from '../interactions/interaction-type.enum';\r\nimport { SceneEventService } from '../../services/scene-event.service';\r\n\r\n/**\r\n * When a GatewayAction is triggered, the game moves on to another scene.\r\n */\r\nexport class GatewayAction extends Action {\r\n    private TargetSceneId: number;\r\n    private TargetSceneName: string;\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.setInteractionType(InteractionType.GO_TO);\r\n    }\r\n\r\n    public trigger(): string {\r\n        // trigger event change\r\n        SceneEventService.getInstance().changeScene(new GatewayActionEvent(this));\r\n        return this.getResponse();\r\n    }\r\n\r\n    public reset(): void {\r\n    }\r\n\r\n    public getTargetSceneId(): number {\r\n        return this.TargetSceneId;\r\n    }\r\n\r\n    public setTargetSceneId(id: number): void {\r\n        this.TargetSceneId = id;\r\n    }\r\n\r\n    public getTargetSceneName(): string {\r\n        return this.TargetSceneName;\r\n    }\r\n\r\n    public setTargetSceneName(name: string): void {\r\n        this.TargetSceneName = name;\r\n    }\r\n}\r\n","import { BaseActionBuilder } from './base-action.builder';\r\nimport { ActionContainingBuilder } from '../interfaces/action-containing.builder';\r\nimport { GatewayAction } from '../../models/actions/gateway-action.model';\r\nimport { BuilderError } from '../../models/errors/builder.error';\r\n\r\nexport class GatewayActionBuilder<ReturnBuilderType extends ActionContainingBuilder>\r\n    extends BaseActionBuilder<GatewayAction, ReturnBuilderType> {\r\n\r\n    constructor(builder: ReturnBuilderType) {\r\n        super(builder, new GatewayAction());\r\n    }\r\n\r\n    public setTargetSceneId(id?: number): this {\r\n        if (id === undefined || id <= 0) {\r\n            throw new EvalError('TargetSceneId Value has to be greater than 0.');\r\n        }\r\n\r\n        this.Action.setTargetSceneId(id);\r\n        return this;\r\n    }\r\n\r\n    public setTargetSceneName(name: string): this {\r\n        if (!name) {\r\n            throw new EvalError('TargetSceneName Value is invalid.');\r\n        }\r\n\r\n        this.Action.setTargetSceneName(name);\r\n        return this;\r\n    }\r\n\r\n    public onFinish(): void {\r\n        if (!this.Action.getTargetSceneId() && !this.Action.getTargetSceneName()) {\r\n            throw new BuilderError('Action creation could not be finished. SceneId and/or TargetSceneName were not set.');\r\n        }\r\n    }\r\n}\r\n","import { InGameItem } from '../Item.model';\r\nimport { ItemConsumingAction } from '../actions/item-consuming-action.model';\r\n\r\nexport class ItemConsumingActionEvent {\r\n    Item: InGameItem;\r\n    ItemNotFoundResponse: string;\r\n    Response: string;\r\n    ResponseAfterUse: string;\r\n    WasTriggered: boolean;\r\n\r\n\r\n    constructor(action: ItemConsumingAction){\r\n        this.Item = action.getItem();\r\n        this.Response = action.getResponse();\r\n        this.ResponseAfterUse = action.getResponseAfterUse();\r\n        this.WasTriggered = action.getWasTriggered();\r\n    }\r\n}\r\n\r\n\r\nexport interface IItemConsumingEventService {\r\n    consumeItem(event: ItemConsumingActionEvent): void;\r\n}\r\n\r\n\r\nexport interface IItemConsumingEventListener {\r\n    OnItemConsume(event: ItemConsumingActionEvent): void;\r\n}\r\n","import { OneTimeAction } from './one-time-action.model';\r\nimport { InGameItem } from '../Item.model';\r\nimport { ItemConsumingActionEvent } from '../events/item-consuming-action.event';\r\nimport { InteractionType } from '../interactions/interaction-type.enum';\r\nimport { ItemEventService } from '../../services/item-event.service';\r\n\r\n/**\r\n * An ItemConsumingAction is only triggered once and uses an Item (once) in the players inventory.\r\n * It can only be triggered, if the user has got the Item in her inventory.\r\n */\r\nexport class ItemConsumingAction extends OneTimeAction {\r\n    private Item: InGameItem;\r\n\r\n    constructor() {\r\n        super();\r\n        this.setInteractionType(InteractionType.USE);\r\n    }\r\n\r\n    public trigger(): string {\r\n        if (this.getWasTriggered()) {\r\n            return this.getResponseAfterUse();\r\n        }\r\n\r\n        ItemEventService.getInstance().consumeItem(new ItemConsumingActionEvent(this));\r\n\r\n        this.setWasTriggered(true);\r\n        return this.getResponse();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.setWasTriggered(false);\r\n    }\r\n\r\n    public getItem(): InGameItem {\r\n        return this.Item;\r\n    }\r\n\r\n    public setItem(item: InGameItem): void {\r\n        this.Item = item;\r\n    }\r\n}\r\n","import { BaseActionBuilder } from './base-action.builder';\r\nimport { ActionContainingBuilder } from '../interfaces/action-containing.builder';\r\nimport { ItemContainingBuilder } from '../interfaces/item-containing.builder';\r\nimport { ItemBuilder } from '../item.builder';\r\nimport { ItemConsumingAction } from '../../models/actions/item-consuming-action.model';\r\nimport { InteractionType } from '../../models/interactions/interaction-type.enum';\r\nimport { InGameItem } from '../../models/Item.model';\r\nimport { BuilderError } from '../../models/errors/builder.error';\r\n\r\nexport class ItemConsumingActionBuilder<ReturnBuilderType extends ActionContainingBuilder>\r\n    extends BaseActionBuilder<ItemConsumingAction, ReturnBuilderType> implements ItemContainingBuilder {\r\n\r\n    constructor(builder: ReturnBuilderType) {\r\n        super(builder, new ItemConsumingAction());\r\n    }\r\n\r\n\r\n    public setWasTrigered(wasTriggered: boolean): this {\r\n        if (wasTriggered === undefined || wasTriggered === null) {\r\n            throw new EvalError('WasTriggered was not set.');\r\n        }\r\n        this.Action.setWasTriggered(wasTriggered);\r\n        return this;\r\n    }\r\n\r\n    public setResponseAfterUse(response: string): this {\r\n        if (!response || response === '') {\r\n            throw new EvalError('No Response found.');\r\n        }\r\n\r\n        this.Action.setResponseAfterUse(response);\r\n        return this;\r\n    }\r\n\r\n\r\n    public setInteractionType(type: InteractionType): this {\r\n        if (!type || !Object.values(InteractionType).includes(type)) {\r\n            throw new EvalError('InteractionType not set.');\r\n        }\r\n\r\n        this.Action.setInteractionType(type);\r\n        return this;\r\n    }\r\n\r\n    public addItemToBuilder(item: InGameItem): void {\r\n        if (!item) {\r\n            throw new BuilderError('Item could not be added to the Action. Item was not set.');\r\n        }\r\n        this.Action.setItem(item);\r\n    }\r\n\r\n    public addItem(item?: InGameItem): ItemBuilder<ItemConsumingActionBuilder<ReturnBuilderType>> {\r\n        return new ItemBuilder<ItemConsumingActionBuilder<ReturnBuilderType>>(this, item);\r\n    }\r\n\r\n    public onFinish(): void {\r\n        if (!this.Action.getItem()) {\r\n            throw new BuilderError('Action creation could not be finished. Item was not set.');\r\n        }\r\n\r\n        if (!this.Action.getResponseAfterUse()) {\r\n            throw new BuilderError('Action creation could not be finished. ResponseAfterUse was not set.');\r\n        }\r\n    }\r\n}\r\n","import { InGameItem } from '../Item.model';\r\nimport { ItemRemovingAction } from '../actions/item-removing-action.model';\r\n\r\nexport class ItemRemovingActionEvent {\r\n    Item: InGameItem;\r\n    ItemNotFoundResponse: string;\r\n    Response: string;\r\n    ResponseAfterUse: string;\r\n    WasTriggered: boolean;\r\n\r\n    constructor(action: ItemRemovingAction){\r\n        this.Item = action.getItem();\r\n        this.Response = action.getResponse();\r\n        this.ResponseAfterUse = action.getResponseAfterUse();\r\n        this.WasTriggered = action.getWasTriggered();\r\n    }\r\n}\r\n\r\nexport interface IItemRemovingEventService {\r\n    removeItem(event: ItemRemovingActionEvent): void;\r\n}\r\n\r\nexport interface IItemRemovingEventListener {\r\n    OnItemRemove(event: ItemRemovingActionEvent): void;\r\n}\r\n","import { OneTimeAction } from './one-time-action.model';\r\nimport { InGameItem } from '../Item.model';\r\nimport { ItemRemovingActionEvent } from '../events/item-removing-action.event';\r\nimport { InteractionType } from '../interactions/interaction-type.enum';\r\nimport { ItemEventService } from '../../services/item-event.service';\r\n\r\n/**\r\n * An ItemRemovingAction is only triggered once and removes an Item out of the players inventory without using it.\r\n * It can only be triggered, if the user has got the Item in her inventory.\r\n */\r\nexport class ItemRemovingAction extends OneTimeAction {\r\n    private Item: InGameItem;\r\n\r\n    constructor() {\r\n        super();\r\n        this.setInteractionType(InteractionType.USE);\r\n    }\r\n\r\n    public trigger(): string {\r\n        if (this.getWasTriggered()) {\r\n            return this.getResponseAfterUse();\r\n        }\r\n\r\n        ItemEventService.getInstance().removeItem(new ItemRemovingActionEvent(this));\r\n\r\n        this.setWasTriggered(true);\r\n        return this.getResponse();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.setWasTriggered(false);\r\n    }\r\n\r\n    public getItem(): InGameItem {\r\n        return this.Item;\r\n    }\r\n\r\n    public setItem(item: InGameItem): void {\r\n        this.Item = item;\r\n    }\r\n}\r\n","import { BaseActionBuilder } from './base-action.builder';\r\nimport { ActionContainingBuilder } from '../interfaces/action-containing.builder';\r\nimport { ItemContainingBuilder } from '../interfaces/item-containing.builder';\r\nimport { ItemBuilder } from '../item.builder';\r\nimport { ItemRemovingAction } from '../../models/actions/item-removing-action.model';\r\nimport { InGameItem } from '../../models/Item.model';\r\nimport { BuilderError } from '../../models/errors/builder.error';\r\nimport { InteractionType } from '../../models/interactions/interaction-type.enum';\r\n\r\n\r\nexport class ItemRemovingActionBuilder<ReturnBuilderType extends ActionContainingBuilder>\r\n    extends BaseActionBuilder<ItemRemovingAction, ReturnBuilderType> implements ItemContainingBuilder {\r\n\r\n    constructor(builder: ReturnBuilderType) {\r\n        super(builder, new ItemRemovingAction());\r\n    }\r\n\r\n    public addItemToBuilder(item: InGameItem): void {\r\n        if (!item) {\r\n            throw new BuilderError('Item could not be added to the Action. Item was not set.');\r\n        }\r\n        this.Action.setItem(item);\r\n    }\r\n\r\n\r\n    public setWasTrigered(wasTriggered: boolean): this {\r\n        if (wasTriggered === undefined || wasTriggered === null) {\r\n            throw new EvalError('WasTriggered was not set.');\r\n        }\r\n        this.Action.setWasTriggered(wasTriggered);\r\n        return this;\r\n    }\r\n\r\n    public setResponseAfterUse(response: string): this {\r\n        if (!response || response === '') {\r\n            throw new EvalError('No Response found.');\r\n        }\r\n\r\n        this.Action.setResponseAfterUse(response);\r\n        return this;\r\n    }\r\n\r\n    public setInteractionType(type: InteractionType): this {\r\n        if (!type || !Object.values(InteractionType).includes(type)) {\r\n            throw new EvalError('InteractionType not set.');\r\n        }\r\n\r\n        this.Action.setInteractionType(type);\r\n        return this;\r\n    }\r\n\r\n    public addItem(item?: InGameItem): ItemBuilder<ItemRemovingActionBuilder<ReturnBuilderType>> {\r\n        return new ItemBuilder<ItemRemovingActionBuilder<ReturnBuilderType>>(this, item);\r\n    }\r\n\r\n    public onFinish(): void {\r\n        if (!this.Action.getItem()) {\r\n            throw new BuilderError('Action creation could not be finished. Item was not set.');\r\n        }\r\n\r\n        if (!this.Action.getResponseAfterUse()) {\r\n            throw new BuilderError('Action creation could not be finished. ResponseAfterUse was not set.');\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { BaseActionBuilder } from './base-action.builder';\r\nimport { ActionContainingBuilder } from '../interfaces/action-containing.builder';\r\nimport { ItemContainingBuilder } from '../interfaces/item-containing.builder';\r\nimport { ItemBuilder } from '../item.builder';\r\nimport { ItemYieldingAction } from '../../models/actions/item-yielding-action.model';\r\nimport { InGameItem } from '../../models/Item.model';\r\nimport { BuilderError } from '../../models/errors/builder.error';\r\nimport { InteractionType } from '../../models/interactions/interaction-type.enum';\r\n\r\n\r\nexport class ItemYieldingActionBuilder<ReturnBuilderType extends ActionContainingBuilder>\r\n    extends BaseActionBuilder<ItemYieldingAction, ReturnBuilderType> implements ItemContainingBuilder {\r\n\r\n    constructor(builder: ReturnBuilderType) {\r\n        super(builder, new ItemYieldingAction());\r\n    }\r\n\r\n    public addItemToBuilder(item: InGameItem): void {\r\n        if (!item) {\r\n            throw new BuilderError('Item could not be added to the Action. Item was not set.');\r\n        }\r\n        this.Action.setItem(item);\r\n    }\r\n\r\n    public addItem(item?: InGameItem): ItemBuilder<ItemYieldingActionBuilder<ReturnBuilderType>> {\r\n        return new ItemBuilder<ItemYieldingActionBuilder<ReturnBuilderType>>(this, item);\r\n    }\r\n\r\n    public setWasTrigered(wasTriggered: boolean): this {\r\n        if (wasTriggered === undefined || wasTriggered === null) {\r\n            throw new EvalError('WasTriggered was not set.');\r\n        }\r\n        this.Action.setWasTriggered(wasTriggered);\r\n        return this;\r\n    }\r\n\r\n    public setResponseAfterUse(response: string): this {\r\n        if (!response || response === '') {\r\n            throw new EvalError('No Response found.');\r\n        }\r\n\r\n        this.Action.setResponseAfterUse(response);\r\n        return this;\r\n    }\r\n\r\n    public setAmountOfItems(amount: number): this {\r\n        if (amount === undefined || amount <= 0) {\r\n            throw new EvalError('AmountOfItems Value has to be greater than 0.');\r\n        }\r\n\r\n        this.Action.setAmountOfItems(amount);\r\n        return this;\r\n    }\r\n\r\n    public setInteractionType(type: InteractionType): this {\r\n        if (!type || !Object.values(InteractionType).includes(type)) {\r\n            throw new EvalError('InteractionType not set.');\r\n        }\r\n\r\n        this.Action.setInteractionType(type);\r\n        return this;\r\n    }\r\n\r\n    public setResetItemUsagesToMaximum(reset: boolean): this {\r\n        if (reset === undefined || reset === null) {\r\n            throw new EvalError('WasTriggered was not set.');\r\n        }\r\n        this.Action.setResetItemUsagesToMaximum(reset);\r\n        return this;\r\n    }\r\n\r\n    public onFinish(): void {\r\n        if (!this.Action.getItem()) {\r\n            throw new BuilderError('Action creation could not be finished. Item was not set.');\r\n        }\r\n\r\n        if (!this.Action.getResponseAfterUse()) {\r\n            throw new BuilderError('Action creation could not be finished. ResponseAfterUse was not set.');\r\n        }\r\n    }\r\n}\r\n","import { InteractionType } from '../interactions/interaction-type.enum';\r\nimport { Action } from './action.model';\r\n\r\n/**\r\n * A MultiTimeAction can be activated multiple times.\r\n * The class allows you to pass an array of responses,\r\n * which will be returned one by one until the maximum usage count is reached.\r\n */\r\nexport class MultiTimeAction extends Action {\r\n    private UsagesLeft: number;\r\n    private MaximumUsages: number;\r\n    private Responses: string[];\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.setInteractionType(InteractionType.DO);\r\n    }\r\n\r\n    public trigger(): string {\r\n        if (this.UsagesLeft <= this.MaximumUsages) {\r\n            const responseString =  this.Responses[this.UsagesLeft];\r\n            this.UsagesLeft++;\r\n            return responseString;\r\n        }\r\n\r\n        return this.getResponse();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.UsagesLeft = 0;\r\n    }\r\n\r\n    public getUsagesLeft(): number {\r\n        return this.UsagesLeft;\r\n    }\r\n\r\n    public setUsagesLeft(usages: number): void {\r\n        this.UsagesLeft = usages;\r\n    }\r\n\r\n    public getMaximumUsages(): number {\r\n        return this.MaximumUsages;\r\n    }\r\n\r\n    public setMaximumUsages(usages: number): void {\r\n        this.MaximumUsages = usages;\r\n    }\r\n\r\n    public getResponses(): string[] {\r\n        return this.Responses;\r\n    }\r\n\r\n    public setResponses(responses: string[]): void {\r\n        this.Responses = responses;\r\n    }\r\n\r\n\r\n}\r\n","import { BaseActionBuilder } from './base-action.builder';\r\nimport { ActionContainingBuilder } from '../interfaces/action-containing.builder';\r\nimport { MultiTimeAction } from '../../models/actions/multi-time-action.model';\r\nimport { InteractionType } from '../../models/interactions/interaction-type.enum';\r\nimport { BuilderError } from '../../models/errors/builder.error';\r\n\r\n\r\nexport class MultiTimeActionBuilder<ReturnBuilderType extends ActionContainingBuilder>\r\n    extends BaseActionBuilder<MultiTimeAction, ReturnBuilderType> {\r\n\r\n    constructor(builder: ReturnBuilderType) {\r\n        super(builder, new MultiTimeAction());\r\n    }\r\n\r\n    public setUsagesLeft(count: number): this {\r\n        if (count === undefined || count <= 0) {\r\n            throw new EvalError('UsagesLeft Value has to be greater than 0.');\r\n        }\r\n\r\n        if (this.Action.getMaximumUsages() && this.Action.getMaximumUsages() < count) {\r\n            throw new EvalError('UsagesLeft Value has to be less than or equal to MaximumUsages Value.');\r\n        }\r\n\r\n        this.Action.setUsagesLeft(count);\r\n        return this;\r\n    }\r\n\r\n\r\n    public setInteractionType(type: InteractionType): this {\r\n        if (!type || !Object.values(InteractionType).includes(type)) {\r\n            throw new EvalError('InteractionType not set.');\r\n        }\r\n\r\n        this.Action.setInteractionType(type);\r\n        return this;\r\n    }\r\n\r\n    public setMaximumUsages(count: number): this {\r\n        if (count === undefined || count <= 0) {\r\n            throw new EvalError('MaximumUsages Value has to be greater than 0.');\r\n        }\r\n\r\n        if (this.Action.getUsagesLeft() !== undefined &&\r\n            this.Action.getUsagesLeft() > count) {\r\n            throw new EvalError('MaximumUsages Value has to be greater than or equal to UsagesLeft Value.');\r\n        }\r\n\r\n        if (this.Action.getResponses() &&\r\n            this.Action.getResponses().length !== count) {\r\n            throw new EvalError('MaximumUsages Value has to match the Amount of Responses.');\r\n        }\r\n\r\n        this.Action.setMaximumUsages(count);\r\n        return this;\r\n    }\r\n\r\n    public setResponses(responses: string[]): this {\r\n        if (!responses) {\r\n            throw new EvalError('Invalid Value for Responses. Has to be an Array of Strings.');\r\n        }\r\n\r\n        if (responses.length === 0) {\r\n            throw new EvalError('Responses Array may not be empty.');\r\n        }\r\n\r\n        this.Action.setResponses(responses);\r\n        return this;\r\n    }\r\n\r\n    public onFinish(): void {\r\n        if (!this.Action.getUsagesLeft()) {\r\n            throw new BuilderError('Action creation could not be finished. UsagesLeft was not set.');\r\n        }\r\n\r\n        if (!this.Action.getMaximumUsages()) {\r\n            throw new BuilderError('Action creation could not be finished. MaximumUsages was not set.');\r\n        }\r\n\r\n        if (!this.Action.getResponses()) {\r\n            throw new BuilderError('Action creation could not be finished. Responses Array was not set.');\r\n        }\r\n\r\n        if (!this.Action.getInteractionType()) {\r\n            throw new BuilderError('Action creation could not be finished. InteractionType was not set.');\r\n        }\r\n    }\r\n\r\n}\r\n","import { InteractionType } from '../interactions/interaction-type.enum';\r\nimport { Action } from './action.model';\r\n\r\n/**\r\n * RandomResponseAction allows the use of multiple Responses.\r\n * Each time this Action is triggered, the response will be selected randomly out of the passed array.\r\n */\r\nexport class RandomResponseAction extends Action {\r\n    private Responses: string[];\r\n\r\n    constructor() {\r\n        super();\r\n        // set normal response to avoid errors during build\r\n        this.setResponse(' ');\r\n        this.setInteractionType(InteractionType.DO);\r\n    }\r\n\r\n    public trigger(): string {\r\n        const rndm = Math.floor(Math.random() * this.Responses.length);\r\n        return this.Responses[rndm];\r\n    }\r\n\r\n    public reset(): void {\r\n    }\r\n\r\n    public getResponses(): string[] {\r\n        return this.Responses;\r\n    }\r\n\r\n    public setResponses(responses: string[]): void {\r\n        this.Responses = responses;\r\n    }\r\n}\r\n","import { BaseActionBuilder } from './base-action.builder';\r\nimport { ActionContainingBuilder } from '../interfaces/action-containing.builder';\r\nimport { RandomResponseAction } from '../../models/actions/random-response-action.model';\r\nimport { InteractionType } from '../../models/interactions/interaction-type.enum';\r\nimport { BuilderError } from '../../models/errors/builder.error';\r\n\r\n\r\n\r\nexport class RandomResponseActionBuilder<ReturnBuilderType extends ActionContainingBuilder>\r\n    extends BaseActionBuilder<RandomResponseAction, ReturnBuilderType> {\r\n\r\n    constructor(builder: ReturnBuilderType) {\r\n        super(builder, new RandomResponseAction());\r\n    }\r\n\r\n    public setResponses(responses: string[]): this {\r\n        if (!responses) {\r\n            throw new EvalError('Invalid Value for Responses. Has to be an Array of Strings.');\r\n        }\r\n\r\n        if (responses.length === 0) {\r\n            throw new EvalError('Responses Array may not be empty.');\r\n        }\r\n\r\n        this.Action.setResponses(responses);\r\n        return this;\r\n    }\r\n\r\n    public setInteractionType(type: InteractionType): this {\r\n        if (!type || !Object.values(InteractionType).includes(type)) {\r\n            throw new EvalError('InteractionType not set.');\r\n        }\r\n\r\n        this.Action.setInteractionType(type);\r\n        return this;\r\n    }\r\n\r\n    public onFinish(): void {\r\n        if (!this.Action.getResponses()) {\r\n            throw new BuilderError('Action creation could not be finished. Responses Array was not set.');\r\n        }\r\n\r\n        if (!this.Action.getInteractionType()) {\r\n            throw new BuilderError('Action creation could not be finished. InteractionType was not set.');\r\n        }\r\n    }\r\n}\r\n","import { BaseActionBuilder } from './base-action.builder';\r\nimport { ActionContainingBuilder } from '../interfaces/action-containing.builder';\r\nimport { OneTimeAction } from '../../models/actions/one-time-action.model';\r\nimport { InteractionType } from '../../models/interactions/interaction-type.enum';\r\nimport { BuilderError } from '../../models/errors/builder.error';\r\n\r\n\r\nexport class OneTimeActionBuilder<ReturnBuilderType extends ActionContainingBuilder>\r\n    extends BaseActionBuilder<OneTimeAction, ReturnBuilderType> {\r\n\r\n    constructor(builder: ReturnBuilderType) {\r\n        super(builder, new OneTimeAction());\r\n    }\r\n\r\n    public setWasTrigered(wasTriggered: boolean): this {\r\n        if (wasTriggered === undefined || wasTriggered === null) {\r\n            throw new EvalError('WasTriggered was not set.');\r\n        }\r\n        this.Action.setWasTriggered(wasTriggered);\r\n        return this;\r\n    }\r\n\r\n    public setResponseAfterUse(response: string): this {\r\n        if (!response || response === '') {\r\n            throw new EvalError('No Response found.');\r\n        }\r\n\r\n        this.Action.setResponseAfterUse(response);\r\n        return this;\r\n    }\r\n\r\n    public setInteractionType(type: InteractionType): this {\r\n        if (!type || !Object.values(InteractionType).includes(type)) {\r\n            throw new EvalError('InteractionType not set.');\r\n        }\r\n\r\n        this.Action.setInteractionType(type);\r\n        return this;\r\n    }\r\n\r\n    public onFinish(): void {\r\n        if (!this.Action.getResponseAfterUse()) {\r\n            throw new BuilderError('Action creation could not be finished. ResponseAfterUse was not set.');\r\n        }\r\n\r\n        if (!this.Action.getInteractionType()) {\r\n            throw new BuilderError('Action creation could not be finished. InteractionType was not set.');\r\n        }\r\n    }\r\n}\r\n\r\n","import { GameBuilder } from './game.builder';\r\nimport { Game } from '../models/game.model';\r\nimport { Scene } from '../models/scene.model';\r\nimport { InGameItem } from '../models/Item.model';\r\nimport { ItemBuilder } from './item.builder';\r\nimport { ItemContainingBuilder } from './interfaces/item-containing.builder';\r\nimport { BaseBuilder } from './base.builder';\r\nimport { ActionContainingBuilder } from './interfaces/action-containing.builder';\r\nimport { Action } from '../models/actions/action.model';\r\nimport { BaseActionBuilder } from './action-builders/base-action.builder';\r\nimport { ItemYieldingAction } from '../models/actions/item-yielding-action.model';\r\nimport { BuilderError } from '../models/errors/builder.error';\r\nimport { GatewayActionBuilder } from './action-builders/gateway-action.builder';\r\nimport { ItemConsumingActionBuilder } from './action-builders/item-consuming-action.builder';\r\nimport { ItemRemovingActionBuilder } from './action-builders/item-removing-action.builder';\r\nimport { ItemYieldingActionBuilder } from './action-builders/item-yielding-action.builder';\r\nimport { MultiTimeActionBuilder } from './action-builders/multi-time-action.builder';\r\nimport { RandomResponseActionBuilder } from './action-builders/random-response-action.builder';\r\nimport { OneTimeActionBuilder } from './action-builders/one-time-action.builder';\r\n\r\nexport class SceneBuilder extends BaseBuilder implements ItemContainingBuilder, ActionContainingBuilder {\r\n    private GameBuilder: GameBuilder;\r\n    private Game: Game;\r\n    protected Scene: Scene;\r\n\r\n    constructor(gameBuilder: GameBuilder, game: Game, sceneId: number = null) {\r\n        super();\r\n        this.GameBuilder = gameBuilder;\r\n        this.Game = game;\r\n        this.Scene = new Scene(sceneId);\r\n    }\r\n\r\n    addActionToBuilder(action: Action): void {\r\n        this.Scene.getActions().push(action);\r\n\r\n        if (action instanceof ItemYieldingAction) {\r\n            this.GameBuilder.IdGeneratorService.addActionItemId(action as ItemYieldingAction);\r\n        }\r\n    }\r\n\r\n    public addAction<T extends Action>(action: T): BaseActionBuilder<T, SceneBuilder> {\r\n        return new BaseActionBuilder<T, SceneBuilder>(this, action);\r\n    }\r\n\r\n    public addGatewayAction(): GatewayActionBuilder<SceneBuilder> {\r\n        return new GatewayActionBuilder<SceneBuilder>(this);\r\n    }\r\n\r\n    public addItemConsumingAction(): ItemConsumingActionBuilder<SceneBuilder> {\r\n        return new ItemConsumingActionBuilder<SceneBuilder>(this);\r\n    }\r\n\r\n    public addItemRemovingAction(): ItemRemovingActionBuilder<SceneBuilder> {\r\n        return new ItemRemovingActionBuilder<SceneBuilder>(this);\r\n    }\r\n\r\n    public addItemYieldingAction(): ItemYieldingActionBuilder<SceneBuilder> {\r\n        return new ItemYieldingActionBuilder<SceneBuilder>(this);\r\n    }\r\n\r\n    public addMultiTimeAction(id?: number): MultiTimeActionBuilder<SceneBuilder> {\r\n        return new MultiTimeActionBuilder<SceneBuilder>(this);\r\n    }\r\n\r\n    public addOneTimeAction(): OneTimeActionBuilder<SceneBuilder> {\r\n        return new OneTimeActionBuilder<SceneBuilder>(this);\r\n    }\r\n\r\n    public addRandomResponseAction(): RandomResponseActionBuilder<SceneBuilder> {\r\n        return new RandomResponseActionBuilder<SceneBuilder>(this);\r\n    }\r\n\r\n    addItemToBuilder(item: InGameItem): void {\r\n        this.Scene.getItems().push(item);\r\n        if (item.getID()) {\r\n            this.GameBuilder.IdGeneratorService.addItemId(item);\r\n        }\r\n    }\r\n\r\n    public addItem(item?: InGameItem): ItemBuilder<SceneBuilder> {\r\n        return new ItemBuilder<SceneBuilder>(this, item);\r\n    }\r\n\r\n    public setName(name: string): this {\r\n        if (!name) {\r\n            throw new EvalError('Name was not set.');\r\n        }\r\n\r\n        this.Scene.setName(name);\r\n        return this;\r\n    }\r\n\r\n    public setDescription(description: string): this {\r\n        if (!description) {\r\n            throw new EvalError('Description was not set.');\r\n        }\r\n\r\n        this.Scene.setDescription(description);\r\n        return this;\r\n    }\r\n\r\n    public setActionNotRecognizedResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('ActionNotRecognizedResponse was not set.');\r\n        }\r\n\r\n        this.Scene.setActionNotRecognizedResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public setItemNotFoundResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('ItemNotFoundResponse was not set.');\r\n        }\r\n\r\n        this.Scene.setItemNotFoundResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public setInvalidInputResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('InvalidInputResponse was not set.');\r\n        }\r\n\r\n        this.Scene.setInvalidInputResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public finish(): GameBuilder {\r\n\r\n        if (!this.Scene.getName()) {\r\n            throw new BuilderError('Scene creation could not be finished. Name was not set.');\r\n        }\r\n\r\n        if (!this.Scene.getDescription()) {\r\n            throw new BuilderError('Scene creation could not be finished. Description was not set.');\r\n        }\r\n\r\n        if (!this.Scene.getInvalidInputResponse()) {\r\n            throw new BuilderError('Scene creation could not be finished. InvalidInputResponse was not set.');\r\n        }\r\n\r\n        if (!this.Scene.getItemNotFoundResponse()) {\r\n            throw new BuilderError('Scene creation could not be finished. ItemNotFoundResponse was not set.');\r\n        }\r\n\r\n        if (!this.Scene.getActionNotRecognizedResponse()) {\r\n            throw new BuilderError('Scene creation could not be finished. ActionNotRecognizedResponse was not set.');\r\n        }\r\n\r\n        // TODO: each scene has to have a gateway action to another scene or be the last action\r\n\r\n        this.Game.getStage().addScene(this.Scene);\r\n        return this.GameBuilder;\r\n    }\r\n}\r\n","import { Game } from '../models/game.model';\r\nimport { Scene } from '../models/scene.model';\r\nimport { InGameItem } from '../models/Item.model';\r\nimport { Action } from '../models/actions/action.model';\r\nimport { ItemYieldingAction } from '../models/actions/item-yielding-action.model';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Assigns IDs to Objects by counting the amount of distinct types\r\n */\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class IDGeneratorService {\r\n    private typeArray: TypeCountContainer[] = [];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public generateIDs(game: Game): void {\r\n        this.processScenes(game.getStage().getScenes());\r\n        this.typeArray = [];\r\n    }\r\n\r\n\r\n    protected processScenes(scenes: Scene[]): void {\r\n        scenes.forEach(element => {\r\n            if (!element.getID()) {\r\n                element.setID(this.getIdFromTypeName(element.constructor.name));\r\n            } else {\r\n                this.setUsedIdForTypeName(element.constructor.name, element.getID());\r\n            }\r\n\r\n            this.processActions(element.getActions());\r\n            this.processItems(element.getItems());\r\n        });\r\n    }\r\n\r\n    protected processActions(actions: Action[]): void {\r\n        actions.forEach(element => {\r\n            if ((element instanceof ItemYieldingAction)\r\n                && !element.getItem().getID()) {\r\n                element.getItem().setID(this.getIdFromTypeName(element.constructor.name));\r\n            }\r\n        });\r\n    }\r\n\r\n    protected processItems(items: InGameItem[]): void {\r\n        items.forEach(element => {\r\n            if (!element.getID()) {\r\n                element.setID(this.getIdFromTypeName(element.constructor.name));\r\n            } else {\r\n                this.setUsedIdForTypeName(element.constructor.name, element.getID());\r\n            }\r\n        });\r\n    }\r\n\r\n    protected getIdFromTypeName(name: string): number {\r\n        const index = this.typeArray.findIndex(element => {\r\n            return element.Name === name;\r\n        });\r\n\r\n        if (index !== -1) {\r\n            return this.typeArray[index].getAndIncrementCount();\r\n        }\r\n\r\n\r\n        return this.createTypeCountContainer(name).getAndIncrementCount();\r\n    }\r\n\r\n    public addItemId(item: InGameItem): void {\r\n        this.setUsedIdForTypeName(item.constructor.name, item.getID());\r\n    }\r\n\r\n    public addSceneId(scene: Scene): void {\r\n        this.setUsedIdForTypeName(scene.constructor.name, scene.getID());\r\n    }\r\n\r\n    public addActionItemId(action: ItemYieldingAction): void {\r\n        this.setUsedIdForTypeName(action.getItem().constructor.name, action.getItem().getID());\r\n    }\r\n\r\n    /**\r\n     * Add the passed id to the corresponding typeNameContainer's usedID Array\r\n     */\r\n    protected setUsedIdForTypeName(name: string, id: number): void {\r\n        const index = this.typeArray.findIndex(element => {\r\n            return element.Name === name;\r\n        });\r\n\r\n        if (index !== -1) {\r\n            this.typeArray[index].addUsedID(id);\r\n            return;\r\n        }\r\n\r\n        this.createTypeCountContainer(name).addUsedID(id);\r\n    }\r\n\r\n    protected createTypeCountContainer(name: string): TypeCountContainer {\r\n        const container = new TypeCountContainer(name);\r\n        this.typeArray.push(container);\r\n        return container;\r\n    }\r\n\r\n    protected getTypeCountContainers(): TypeCountContainer[] {\r\n        return this.typeArray;\r\n    }\r\n\r\n}\r\n\r\nexport class TypeCountContainer {\r\n    public Name: string;\r\n    public Count: number;\r\n    // keep track of the used ids for each type\r\n    public UsedIDs: number[];\r\n\r\n    constructor(name: string) {\r\n        this.Name = name;\r\n        this.Count = 0;\r\n        this.UsedIDs = [];\r\n    }\r\n\r\n    getAndIncrementCount(): number {\r\n        this.Count++;\r\n        while (this.isCurrentCountUsed()) {\r\n            this.Count++;\r\n        }\r\n        this.addUsedID(this.Count);\r\n        return this.Count;\r\n    }\r\n\r\n    addUsedID(usedId: number): void {\r\n        if (this.isIdUsed(usedId)) {\r\n            throw new EvalError('Id is already being used.');\r\n        }\r\n        this.UsedIDs.push(usedId);\r\n    }\r\n\r\n    isCurrentCountUsed(): boolean {\r\n        return this.UsedIDs.filter(element => element === this.Count).length > 0;\r\n    }\r\n\r\n    isIdUsed(id: number): boolean {\r\n        return !(!this.UsedIDs.find(element => element === id));\r\n    }\r\n}\r\n","import { Command } from '../models/command.model';\r\nimport { BuilderError } from '../models/errors/builder.error';\r\nimport { BaseBuilder } from './base.builder';\r\nimport { CommandContainingBuilder } from './interfaces/command-containing.builder';\r\n\r\nexport class CommandBuilder<ReturnBuilderType extends CommandContainingBuilder> extends BaseBuilder {\r\n    protected Command: Command;\r\n    private Builder: ReturnBuilderType;\r\n\r\n    constructor(builder: ReturnBuilderType, command: Command = new Command()) {\r\n        super();\r\n        this.Command = command;\r\n        this.Builder = builder;\r\n    }\r\n\r\n    public setTrigger(trigger: string): this {\r\n        if (!trigger) {\r\n            throw new EvalError('Trigger was undefined.');\r\n        }\r\n\r\n        this.Command.setTrigger(trigger);\r\n        return this;\r\n    }\r\n\r\n    public setResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('Response was undefined.');\r\n        }\r\n\r\n        this.Command.setResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public setResponseFunction(respFunc: () => string): this {\r\n        if (!respFunc) {\r\n            throw new EvalError('ResponseFunction was undefined.');\r\n        }\r\n\r\n        this.Command.setResponseFunction(respFunc);\r\n        return this;\r\n    }\r\n\r\n    public setUseTypeWritingAnimation(use: boolean): this {\r\n        if (use === undefined || use === null) {\r\n            throw new EvalError('UseTypeWritingAnimation was undefined.');\r\n        }\r\n\r\n        this.Command.setUseTypeWritingAnimation(use);\r\n        return this;\r\n    }\r\n\r\n    public setDescription(descr: string): this {\r\n        if (!descr) {\r\n            throw new EvalError('Description was undefined');\r\n        }\r\n\r\n        this.Command.setDescription(descr);\r\n        return this;\r\n    }\r\n\r\n    public finish(): ReturnBuilderType {\r\n        if (!this.Command.getTrigger()) {\r\n            throw new BuilderError('Could not create Command. Trigger was not set.');\r\n        }\r\n\r\n        if (!this.Command.getDescription()) {\r\n            throw new BuilderError('Could not create Command. Description was not set.');\r\n        }\r\n\r\n        if (!this.Command.getResponse() && !this.Command.getResponseFunction()) {\r\n            throw new BuilderError('Could not create Command. Response and ResponseFunction were not set. One of both is required.');\r\n        }\r\n\r\n        if (this.Command.getUseTypeWritingAnimation() === undefined || this.Command.getUseTypeWritingAnimation() === null) {\r\n            this.Command.setUseTypeWritingAnimation(true);\r\n        }\r\n\r\n        this.Builder.addCommandToBuilder(this.Command);\r\n\r\n        return this.Builder;\r\n    }\r\n\r\n}\r\n","import { Game } from '../models/game.model';\r\nimport { InventoryBuilder } from './inventory.builder';\r\nimport { BuilderError } from '../models/errors/builder.error';\r\nimport { SceneBuilder } from './scene.builder';\r\nimport { BaseBuilder } from './base.builder';\r\nimport { IDGeneratorService } from '../services/id-generator.service';\r\nimport { Command } from '../models/command.model';\r\nimport { CommandContainingBuilder } from './interfaces/command-containing.builder';\r\nimport { CommandBuilder } from './command.builder';\r\n\r\n/**\r\n * Use this class to chain the game building process.\r\n * Once your Game is build completely, call the 'build' method.\r\n */\r\nexport class GameBuilder extends BaseBuilder implements CommandContainingBuilder {\r\n    protected Game: Game;\r\n    public IdGeneratorService: IDGeneratorService;\r\n\r\n    constructor() {\r\n        super();\r\n        this.Game = new Game();\r\n        this.IdGeneratorService = new IDGeneratorService();\r\n    }\r\n\r\n    public addInventory(): InventoryBuilder {\r\n        return new InventoryBuilder(this, this.Game);\r\n    }\r\n\r\n    public addScene(id?: number): SceneBuilder {\r\n        return new SceneBuilder(this, this.Game, id);\r\n    }\r\n\r\n    public addCommand(): CommandBuilder<GameBuilder> {\r\n        return new CommandBuilder(this);\r\n    }\r\n\r\n    addCommandToBuilder(command: Command): this {\r\n        if (!command) {\r\n            throw new BuilderError('Command was undefined');\r\n        }\r\n\r\n        this.Game.getCommands().push(command);\r\n        return this;\r\n    }\r\n\r\n    public removeExistingCommands(): this {\r\n        this.Game.setCommands([]);\r\n        return this;\r\n    }\r\n\r\n    public setTitle(title: string): this {\r\n        if (!title) {\r\n            throw new EvalError('Title was undefined.');\r\n        }\r\n\r\n        this.Game.setTitle(title);\r\n        return this;\r\n    }\r\n\r\n    public setIntroduction(intro: string): this {\r\n        if (!intro) {\r\n            throw new EvalError('Introduction was undefined.');\r\n        }\r\n\r\n        this.Game.setIntroduction(intro);\r\n        return this;\r\n    }\r\n\r\n    public setItemNotFoundInInventoryResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('ItemNotFoundInInventoryResponse was undefined.');\r\n        }\r\n\r\n        this.Game.setItemNotFoundInInventoryResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public setItemAddedToInventoryResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('ItemAddedToInventoryResponse was undefined.');\r\n        }\r\n\r\n        this.Game.setItemAddedToInventoryResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public setGatewayTargetNotFoundResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('GatewayTargetNotFoundResponse was undefined.');\r\n        }\r\n\r\n        this.Game.setGatewayTargetNotFoundResponse(response);\r\n        return this;\r\n    }\r\n\r\n    public setInventoryEmptyResponse(response: string): this {\r\n        if (!response) {\r\n            throw new EvalError('InventoryEmptyResponse was undefined.');\r\n        }\r\n\r\n        this.Game.setInventoryEmptyResponse(response);\r\n        return this;\r\n    }\r\n\r\n\r\n    public finish(): Game {\r\n\r\n        if (!this.Game.getTitle()) {\r\n            throw new BuilderError('Game creation could not be finished. Title was not set.');\r\n        }\r\n\r\n        if (!this.Game.getIntroduction()) {\r\n            throw new BuilderError('Game creation could not be finished. Introduction was not set.');\r\n        }\r\n\r\n        if (!this.Game.getItemAddedToInventoryResponse()) {\r\n            throw new BuilderError('Game creation could not be finished. ItemAddedToInventoryResponse was not set.');\r\n        }\r\n\r\n        if (!this.Game.getItemNotFoundInInventoryResponse()) {\r\n            throw new BuilderError('Game creation could not be finished. ItemNotFoundInInventoryResponse was not set.');\r\n        }\r\n\r\n        if (!this.Game.getGatewayTargetNotFoundResponse()) {\r\n            throw new BuilderError('Game creation could not be finished. GatewayTargetNotFoundResponse was not set.');\r\n        }\r\n\r\n        if (!this.Game.getInventoryEmptyResponse()) {\r\n            throw new BuilderError('Game creation could not be finished. InventoryEmptyResponse was not set.');\r\n        }\r\n\r\n        if (this.Game.getScenesCount() <= 0) {\r\n            throw new BuilderError('Game creation could not be finished. No Scenes were found.');\r\n        }\r\n\r\n        this.generateUnassignedIds();\r\n        return this.Game;\r\n    }\r\n\r\n\r\n    protected generateUnassignedIds(): void {\r\n        this.IdGeneratorService.generateIDs(this.Game);\r\n    }\r\n}\r\n","export enum TextInputType {\r\n    UserInput = 'input',\r\n    Output = 'output'\r\n}\r\n","import { TextInputType } from './text-input.enum';\r\n\r\nexport class TextInput {\r\n    Value: string;\r\n    Type: TextInputType;\r\n\r\n    constructor(Value: string, Type: TextInputType) {\r\n        this.Value = Value;\r\n        this.Type = Type;\r\n    }\r\n}\r\n","export class ParseInputResult {\r\n    public Result: string;\r\n    public UseTypewriterAnimation: boolean;\r\n    public IsEndGameResult: boolean;\r\n\r\n    constructor(result: string, typewriteAnimation: boolean = true, isEndGameResult: boolean = false) {\r\n        this.Result = result;\r\n        this.UseTypewriterAnimation = typewriteAnimation;\r\n        this.IsEndGameResult = isEndGameResult;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Action } from '../models/actions/action.model';\r\nimport { InGameItem } from '../models/Item.model';\r\nimport { Game } from '../models/game.model';\r\n\r\nimport * as natural from 'natural';\r\nimport { InteractionType } from '../models/interactions/interaction-type.enum';\r\nimport { IClassificationTrainer } from './classification-trainer.interface';\r\nimport { ParseInputResult } from '../models/other/parse-input-result.model';\r\nconst language = 'EN';\r\n// see Penn Treebank Part-of-Speech Tags for more info on the tags\r\nconst defaultCategory = 'N';\r\nconst defaultCategoryCapitalized = 'NNP';\r\nconst nounCategories = ['N', 'NN', 'NNS', 'NNP', 'NNPS'];\r\nconst verbCategories = ['VB', 'VBD', 'VBG', 'VBN', 'VBO', 'VBZ'];\r\n\r\n/**\r\n * Helps to parse text input and call the corresponding action, returning a response\r\n */\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class InputParserService {\r\n    private Game: Game;\r\n    private POSTagger: natural.BrillPOSTagger;\r\n    private Tokenizer: natural.WordTokenizer;\r\n    private Classifier: natural.BayesClassifier;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public initialize(trainer: IClassificationTrainer): Promise<boolean> {\r\n        return new Promise<boolean>((resolve) => {\r\n            this.Tokenizer = new natural.WordTokenizer();\r\n            const lexicon = new natural.Lexicon(language, defaultCategory, defaultCategoryCapitalized);\r\n            const ruleSet = new natural.RuleSet('EN');\r\n            this.POSTagger = new natural.BrillPOSTagger(lexicon, ruleSet);\r\n            this.Classifier = new natural.BayesClassifier();\r\n            trainer.trainClassifier(this.Classifier).then(() => resolve(true));\r\n        });\r\n    }\r\n\r\n\r\n    setGame(game: Game): void {\r\n        this.Game = game;\r\n    }\r\n\r\n    public parseInput(input: string): ParseInputResult {\r\n        const commandsResult = this.getCommandsResponse(input);\r\n        if (commandsResult) {\r\n            return commandsResult;\r\n        }\r\n\r\n        // because imperatives are not so common in the brown/penn corpus, we add a 'they ' before\r\n        // the whole sentence, in order to make it a legitimate sentence and identify imperatives as verbs instead of nouns\r\n        input = 'they ' + input;\r\n\r\n        const taggedTokens = this.POSTagger.tag(this.Tokenizer.tokenize(input)).taggedWords;\r\n        // we get verbs and nouns, because in many cases a noun may be mistaken to be a verb and vice versa e.g. (a) stick & (to) stick\r\n        const nounsAndVerbs = this.getNounsAndVerbsFromTokenizedInput(taggedTokens);\r\n\r\n        const interactionType = this.getInteractionType(input);\r\n\r\n        // no interaction type found\r\n        if (interactionType === undefined || interactionType === null) {\r\n            return new ParseInputResult(this.Game.getInvalidInputResponse());\r\n        }\r\n\r\n        switch (interactionType) {\r\n            case InteractionType.GO_TO:\r\n                // scenes/gateway actions\r\n                return this.getGoToResponse(nounsAndVerbs);\r\n            case InteractionType.LOOK_AT:\r\n                // item description\r\n                return this.getLookAtResponse(nounsAndVerbs);\r\n            case InteractionType.PICK_UP:\r\n                // add item to inventory\r\n                return this.getPickUpResponse(nounsAndVerbs);\r\n            case InteractionType.USE:\r\n                // use item in inventory or in scene\r\n                return this.getUseResponse(nounsAndVerbs);\r\n            default:\r\n                // do something\r\n                return this.getDoResponse(nounsAndVerbs);\r\n        }\r\n\r\n    }\r\n\r\n    protected getCommandsResponse(input: string): ParseInputResult {\r\n        const lowerCaseInput = input.toLocaleLowerCase();\r\n\r\n        let commandsResult: ParseInputResult;\r\n        this.Game.getCommands().some(command => {\r\n            if (command.getTrigger().toLocaleLowerCase() === lowerCaseInput) {\r\n                commandsResult = new ParseInputResult(command.activate(), command.getUseTypeWritingAnimation());\r\n                return true;\r\n            }\r\n        });\r\n\r\n        return commandsResult;\r\n    }\r\n\r\n    protected getGoToResponse(relevantWords: string[]): ParseInputResult {\r\n        const result = new ParseInputResult('');\r\n        // get gateway actions\r\n        const gatewayActions = this.Game.getActionsInScene().filter(val => {\r\n            return val.getInteractionType() === InteractionType.GO_TO;\r\n        });\r\n\r\n        if (!gatewayActions || gatewayActions.length <= 0) {\r\n            result.Result = this.Game.getGatewayTargetNotFoundResponse();\r\n            return result;\r\n        }\r\n\r\n        const actionDistances = this.getActionDistancesFromNouns(relevantWords, gatewayActions);\r\n\r\n        if (!actionDistances || actionDistances.length <= 0) {\r\n            result.Result = this.Game.getGatewayTargetNotFoundResponse();\r\n            return result;\r\n        }\r\n\r\n        const action = actionDistances[0].Action;\r\n\r\n        result.Result = action.trigger();\r\n        result.IsEndGameResult = action.getIsEndGameAction();\r\n        return result;\r\n\r\n    }\r\n\r\n    protected getLookAtResponse(relevantWords: string[]): ParseInputResult {\r\n        const result = new ParseInputResult('');\r\n\r\n        const itemDistances = this.getItemDistancesFromNouns(relevantWords,\r\n            this.Game.getItemsInScene(),\r\n            this.Game.getItemsInInventory());\r\n\r\n        if (!itemDistances || itemDistances.length <= 0) {\r\n            result.Result = this.Game.getItemNotFoundResponse();\r\n            return result;\r\n        }\r\n\r\n        result.Result = itemDistances[0].Item.getDescription();\r\n        return result;\r\n    }\r\n\r\n    protected getPickUpResponse(relevantWords: string[]): ParseInputResult {\r\n        const result = new ParseInputResult('');\r\n\r\n        const itemDistances = this.getItemDistancesFromNouns(relevantWords,\r\n            this.Game.getItemsInScene(),\r\n            undefined);\r\n\r\n        if (!itemDistances || itemDistances.length <= 0) {\r\n            result.Result = this.Game.getItemNotFoundResponse();\r\n            return result;\r\n        }\r\n\r\n        const item = itemDistances[0].Item;\r\n\r\n        if (!item.getCanPickUp()) {\r\n            result.Result = item.getCannotPickUpResponse();\r\n            return result;\r\n        }\r\n\r\n        // one cannot pick up an item, that has no usages left anymore\r\n        if (item.getUsagesLeft() <= 0) {\r\n            result.Result = item.getNoUsagesLeftResponse();\r\n            return result;\r\n        }\r\n\r\n        this.Game.addItemToInventory(item);\r\n\r\n        this.Game.removeItemFromScene(item);\r\n\r\n        result.Result = this.Game.getItemAddedToInventoryResponse();\r\n        return result;\r\n    }\r\n\r\n    protected getUseResponse(relevantWords: string[]): ParseInputResult {\r\n        const result = new ParseInputResult('');\r\n\r\n        const itemDistances = this.getItemDistancesFromNouns(relevantWords,\r\n            this.Game.getItemsInScene(),\r\n            this.Game.getItemsInInventory());\r\n\r\n        if (!itemDistances || itemDistances.length <= 0) {\r\n            result.Result = this.Game.getItemNotFoundResponse();\r\n            return result;\r\n        }\r\n\r\n        const currentItem = itemDistances[0].Item;\r\n\r\n        if (!currentItem.CanUseFunction(currentItem, this.Game.getStage().getCurrentScene(), this.Game.getInventory())) {\r\n            result.Result = currentItem.getCannotUseItemResponse();\r\n            return result;\r\n        }\r\n\r\n        result.Result = currentItem.use();\r\n\r\n        // if the item was in the inventory and has no usages left anymore -> remove it from inventory\r\n        if (currentItem.WasPickedUp && currentItem.getUsagesLeft() <= 0) {\r\n            result.Result += `\\r\\n${currentItem.getNoUsagesLeftResponse()}`;\r\n            this.Game.removeItemFromInventory(currentItem);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected getDoResponse(relevantWords: string[]): ParseInputResult {\r\n        const result = new ParseInputResult('');\r\n\r\n        const actions = this.Game.getActionsInScene().filter(val => {\r\n            return val.getInteractionType() === InteractionType.DO;\r\n        });\r\n\r\n        if (!actions || actions.length <= 0) {\r\n            result.Result = this.Game.getActionNotRecognizedResponse();\r\n            return result;\r\n        }\r\n\r\n        const actionDistances = this.getActionDistancesFromNouns(relevantWords, actions);\r\n\r\n        if (!actionDistances || actionDistances.length <= 0) {\r\n            result.Result = this.Game.getActionNotRecognizedResponse();\r\n            return result;\r\n        }\r\n\r\n        const action = actionDistances[0].Action;\r\n\r\n        result.Result = action.trigger();\r\n        result.IsEndGameResult = action.getIsEndGameAction();\r\n        return result;\r\n    }\r\n\r\n    protected getNounsAndVerbsFromTokenizedInput(taggedTokens: TaggedToken[]): any {\r\n        return taggedTokens.reduce<string[]>((result, token) => {\r\n            if (nounCategories.includes(token.tag) || verbCategories.includes(token.tag)) {\r\n                result.push(token.token);\r\n            }\r\n\r\n            return result;\r\n        }, []);\r\n    }\r\n\r\n    private getItemDistancesFromNouns(relevantWords: string[], sceneItems: InGameItem[], inventoryItems: InGameItem[]): ItemDistance[] {\r\n        const itemDistances: ItemDistance[] = [];\r\n\r\n        let items = [];\r\n        if (sceneItems) {\r\n            items = items.concat(sceneItems);\r\n        }\r\n\r\n        if (inventoryItems) {\r\n            items = items.concat(inventoryItems);\r\n        }\r\n\r\n        items.map(val => {\r\n            const taggedName = this.POSTagger.tag(this.Tokenizer.tokenize(val.Name)).taggedWords;\r\n            taggedName.map(name => {\r\n                relevantWords.map(input => {\r\n                    const distance = natural.DamerauLevenshteinDistance(input,\r\n                        name.token, { transposition_cost: 0 });\r\n                    if (distance <= 1) {\r\n                        itemDistances.push(new ItemDistance(val, distance));\r\n                    }\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n        return itemDistances.sort(val => val.Distance);\r\n    }\r\n\r\n    private getActionDistancesFromNouns(relevantWords: string[], actions: Action[]): ActionDistance[] {\r\n        const actionDistances: ActionDistance[] = [];\r\n\r\n        actions.map(val => {\r\n            const taggedTrigger = this.POSTagger.tag(this.Tokenizer.tokenize(val.getTrigger())).taggedWords;\r\n\r\n            taggedTrigger.map(trigger => {\r\n                relevantWords.map(input => {\r\n                    const distance = natural.DamerauLevenshteinDistance(input,\r\n                        trigger.token, { transposition_cost: 0 });\r\n                    if (distance <= 1) {\r\n                        actionDistances.push(new ActionDistance(val, distance));\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        return actionDistances.sort(val => val.Distance);\r\n    }\r\n\r\n    protected getInteractionType(input: string): InteractionType {\r\n        const result = this.Classifier.classify(input);\r\n        return this.getInteractionTypeFromClassificationResult(result);\r\n    }\r\n\r\n    public getInteractionTypeFromClassificationResult(result: string): InteractionType {\r\n        switch (result) {\r\n            case 'use':\r\n                return InteractionType.USE;\r\n            case 'look_at':\r\n                return InteractionType.LOOK_AT;\r\n            case 'go_to':\r\n                return InteractionType.GO_TO;\r\n            case 'pick_up':\r\n                return InteractionType.PICK_UP;\r\n            case 'do':\r\n                return InteractionType.DO;\r\n            default:\r\n                return InteractionType.DO;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass ActionTag {\r\n    public Action: Action;\r\n    public Tag: string;\r\n\r\n    public constructor(action: Action, tag: string) {\r\n        this.Action = action;\r\n        this.Tag = tag;\r\n    }\r\n}\r\n\r\nclass ActionDistance {\r\n    public Action: Action;\r\n    public Distance: number;\r\n\r\n    public constructor(action: Action, distance: number) {\r\n        this.Action = action;\r\n        this.Distance = distance;\r\n    }\r\n}\r\n\r\nclass ItemDistance {\r\n    public Item: InGameItem;\r\n    public Distance: number;\r\n\r\n    public constructor(item: InGameItem, distance: number) {\r\n        this.Item = item;\r\n        this.Distance = distance;\r\n    }\r\n}\r\n\r\nclass ItemTag {\r\n    public Item: InGameItem;\r\n    public Tag: string;\r\n\r\n    public constructor(item: InGameItem, tag: string) {\r\n        this.Item = item;\r\n        this.Tag = tag;\r\n    }\r\n}\r\n\r\nclass TaggedToken {\r\n    token: string;\r\n    tag: string;\r\n    distance: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IClassificationTrainer } from './classification-trainer.interface';\r\nimport * as natural from 'natural';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClassificationTrainer implements IClassificationTrainer {\r\n    trainClassifier(classifier: natural.BayesClassifier): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            classifier.addDocument('use keys', 'use');\r\n            classifier.addDocument('use knob', 'use');\r\n            classifier.addDocument('use old pen', 'use');\r\n            classifier.addDocument('use rusty knife', 'use');\r\n            classifier.addDocument('open door', 'use');\r\n            classifier.addDocument('open oven', 'use');\r\n            classifier.addDocument('open window', 'use');\r\n            classifier.addDocument('interact with animal', 'use');\r\n            classifier.addDocument('interact person', 'use');\r\n            classifier.addDocument('close door', 'use');\r\n            classifier.addDocument('close chest', 'use');\r\n            classifier.addDocument('shut window', 'use');\r\n            classifier.addDocument('shut the lid', 'use');\r\n            classifier.addDocument('drink soda', 'use');\r\n            classifier.addDocument('drink water', 'use');\r\n            classifier.addDocument('eat mushrooms', 'use');\r\n            classifier.addDocument('eat food', 'use');\r\n\r\n            classifier.addDocument('look at house', 'look_at');\r\n            classifier.addDocument('look at the chair', 'look_at');\r\n            classifier.addDocument('inspect door', 'look_at');\r\n            classifier.addDocument('inspect knife', 'look_at');\r\n            classifier.addDocument('check window', 'look_at');\r\n            classifier.addDocument('check fireplace', 'look_at');\r\n            classifier.addDocument('analyze notes', 'look_at');\r\n            classifier.addDocument('analyze keys', 'look_at');\r\n            classifier.addDocument('read book', 'look_at');\r\n            classifier.addDocument('read letter', 'look_at');\r\n            classifier.addDocument('observe darkness', 'look_at');\r\n            classifier.addDocument('observe forrest', 'look_at');\r\n\r\n\r\n            classifier.addDocument('go inside', 'go_to');\r\n            classifier.addDocument('go outside', 'go_to');\r\n            classifier.addDocument('enter building', 'go_to');\r\n            classifier.addDocument('enter home', 'go_to');\r\n            classifier.addDocument('leave house', 'go_to');\r\n            classifier.addDocument('leave hut', 'go_to');\r\n            classifier.addDocument('run away', 'go_to');\r\n            classifier.addDocument('run into the darkness', 'go_to');\r\n            classifier.addDocument('walk to place', 'go_to');\r\n            classifier.addDocument('walk to the shed', 'go_to');\r\n            classifier.addDocument('walk into the bar', 'go_to');\r\n            classifier.addDocument('go to Peter', 'go_to');\r\n            classifier.addDocument('go in to the forrest', 'go_to');\r\n            classifier.addDocument('go into the cellar', 'go_to');\r\n\r\n\r\n            classifier.addDocument('take keys', 'pick_up');\r\n            classifier.addDocument('take up book', 'pick_up');\r\n            classifier.addDocument('take notebook', 'pick_up');\r\n            classifier.addDocument('pick up a lighter', 'pick_up');\r\n            classifier.addDocument('pick up leash', 'pick_up');\r\n            classifier.addDocument('put something into bag', 'pick_up');\r\n            classifier.addDocument('put water bottle into inventory', 'pick_up');\r\n            classifier.addDocument('gather mushrooms', 'pick_up');\r\n            classifier.addDocument('collect stones', 'pick_up');\r\n            classifier.addDocument('acquire medal', 'pick_up');\r\n\r\n            classifier.addDocument('dance', 'do');\r\n            classifier.addDocument('sit', 'do');\r\n            classifier.addDocument('stand', 'do');\r\n            classifier.addDocument('sleep', 'do');\r\n            classifier.addDocument('fish', 'do');\r\n            classifier.addDocument('do', 'do');\r\n            classifier.addDocument('write', 'do');\r\n            classifier.addDocument('read', 'do');\r\n            classifier.addDocument('find', 'do');\r\n            classifier.addDocument('work', 'do');\r\n            classifier.addDocument('try', 'do');\r\n            classifier.addDocument('feel', 'do');\r\n            classifier.addDocument('create', 'do');\r\n            classifier.addDocument('speak', 'do');\r\n            classifier.addDocument('talk', 'do');\r\n            classifier.addDocument('offer', 'do');\r\n            classifier.addDocument('buy', 'do');\r\n            classifier.addDocument('kill', 'do');\r\n            classifier.addDocument('beat', 'do');\r\n            classifier.addDocument('harm', 'do');\r\n            classifier.addDocument('jump', 'do');\r\n            classifier.addDocument('sell', 'do');\r\n            classifier.addDocument('pull', 'do');\r\n            classifier.addDocument('push', 'do');\r\n            classifier.addDocument('put', 'do');\r\n\r\n            classifier.events.on('trainedWithDocument', () => resolve());\r\n\r\n            classifier.train();\r\n            resolve();\r\n        });\r\n\r\n    }\r\n\r\n}\r\n","import { Game } from '../game.model';\r\n\r\nexport class GameResetEvent {\r\n\r\n    constructor(game: Game) {\r\n    }\r\n}\r\n","import { Game } from '../game.model';\r\n\r\nexport class GameEndEvent {\r\n\r\n    constructor(game: Game) {\r\n    }\r\n}\r\n","export class GameStartEvent {\r\n\r\n}\r\n","import { Component, OnInit, ElementRef, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { TextInputType } from '../models/other/text-input.enum';\r\nimport { TextInput } from '../models/other/text-input.model';\r\nimport { Game } from '../models/game.model';\r\nimport { GameBuilder } from '../builder/game.builder';\r\nimport { InputParserService } from '../services/input-parser.service';\r\nimport { ClassificationTrainer } from '../services/classification-trainer.service';\r\nimport { GameResetEvent } from '../models/events/game-reset.event';\r\nimport { GameEndEvent } from '../models/events/game-end.event';\r\nimport { GameStartEvent } from '../models/events/game-start.event';\r\nimport { InteractionType } from '../models/interactions/interaction-type.enum';\r\nimport { IClassificationTrainer } from '../services/classification-trainer.interface';\r\nimport { GameError } from '../models/errors/game.error';\r\n\r\n/**\r\n * Main Component, that contains the input and output of the game.\r\n */\r\n@Component({\r\n  selector: 'tas-text-adventure',\r\n  templateUrl: './text-adventure.component.html',\r\n  styleUrls: ['./text-adventure.component.scss']\r\n})\r\nexport class TextAdventureComponent implements OnInit {\r\n  @ViewChild('input', { static: true }) inputElement: ElementRef;\r\n\r\n  OutputArray: TextInput[] = [];\r\n  IsLoading = false;\r\n  @Input() UseTypewritingAnimation = true;\r\n  @Input() TypewriterSpeed = 40;\r\n\r\n  @Input() Game: Game;\r\n  @Input() ClassificationTrainer: IClassificationTrainer;\r\n\r\n  @Output() OnGameStartEvent: EventEmitter<GameStartEvent> = new EventEmitter<GameStartEvent>();\r\n  @Output() OnGameResetEvent: EventEmitter<GameResetEvent> = new EventEmitter<GameResetEvent>();\r\n  @Output() OnGameEndEvent: EventEmitter<GameEndEvent> = new EventEmitter<GameEndEvent>();\r\n\r\n  GameBuilder: GameBuilder;\r\n\r\n  InputForm: FormGroup = new FormGroup(\r\n    {\r\n      userInput: new FormControl({\r\n        value: '',\r\n        disabled: this.IsLoading\r\n      }, [\r\n        Validators.required\r\n      ])\r\n    }\r\n  );\r\n\r\n  constructor(private inputParserService: InputParserService) {\r\n    if (!this.ClassificationTrainer) {\r\n      inputParserService.initialize(new ClassificationTrainer());\r\n    }\r\n    else {\r\n      inputParserService.initialize(this.ClassificationTrainer);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.startLoading();\r\n    if (!this.Game) {\r\n      throw new GameError('Game not found.');\r\n    }\r\n    this.startGame();\r\n  }\r\n\r\n  OnSubmit(): void {\r\n    this.startLoading();\r\n    const inputString = this.userInput.value;\r\n    if (!inputString) {\r\n      this.stopLoading();\r\n      return;\r\n    }\r\n    this.printInput(inputString);\r\n    this.userInput.setValue('');\r\n\r\n    const parseResult = this.inputParserService.parseInput(inputString);\r\n\r\n    this.printOutput(parseResult.Result, parseResult.UseTypewriterAnimation).then(() => this.stopLoading());\r\n  }\r\n\r\n  OnGameReset(): void {\r\n    this.OnGameResetEvent.emit(new GameResetEvent(this.Game));\r\n  }\r\n\r\n  OnGameEnd(): void {\r\n    this.OnGameEndEvent.emit(new GameEndEvent(this.Game));\r\n  }\r\n\r\n  private get userInput(): FormControl {\r\n    return this.InputForm.get('userInput') as FormControl;\r\n  }\r\n\r\n  private startLoading(): void {\r\n    this.IsLoading = true;\r\n    this.userInput.disable();\r\n  }\r\n\r\n  private stopLoading(): void {\r\n    this.IsLoading = false;\r\n    this.userInput.enable();\r\n    setTimeout(() => {\r\n      this.inputElement.nativeElement.focus();\r\n    });\r\n  }\r\n\r\n  private startGame(): void {\r\n    this.inputParserService.setGame(this.Game);\r\n    this.OnGameStartEvent.emit(new GameStartEvent());\r\n    this.printOutput(this.Game.getTitle()).then(() => this.printOutput(this.Game.getIntroduction())).then(() => this.stopLoading());\r\n  }\r\n\r\n  private printOutput(output: string, useTypewriteAnimationOnOutput: boolean = true): Promise<void> {\r\n    return new Promise<void>((outerResolve) => {\r\n      if (useTypewriteAnimationOnOutput && this.UseTypewritingAnimation) {\r\n        const outputLines = output.split('\\r\\n');\r\n        // we create a promise chain, in order to avoid printing new lines written as '<br>'\r\n        let outputPromise = new Promise((resolve) => resolve());\r\n        for (const singleLine of outputLines) {\r\n          outputPromise = outputPromise.then(() => this.printLineAnimated(singleLine));\r\n        }\r\n        outputPromise = outputPromise.then(outerResolve);\r\n      } else {\r\n        output = output.split('\\r\\n').join('<br>');\r\n        this.OutputArray.push(new TextInput(output, TextInputType.Output));\r\n        outerResolve();\r\n      }\r\n    });\r\n  }\r\n\r\n  private printLineAnimated(line: string): Promise<void> {\r\n    return new Promise<void>((resolve) => {\r\n      this.OutputArray.push(new TextInput('', TextInputType.Output));\r\n      // exit the recursion with the \"resolve\" function of the promise\r\n      this.typewriteOutput(0, line, this.OutputArray, resolve);\r\n    });\r\n  }\r\n\r\n  private typewriteOutput(i: number, output: string, outputArray: TextInput[], resolveFunction): void {\r\n    if (i >= output.length) {\r\n      resolveFunction();\r\n    }\r\n    const char = output.charAt(i);\r\n    outputArray[outputArray.length - 1].Value += char;\r\n    i++;\r\n    setTimeout(() => {\r\n      this.typewriteOutput(i, output, this.OutputArray, resolveFunction);\r\n    }, this.TypewriterSpeed);\r\n  }\r\n\r\n  private printInput(input: string): void {\r\n    this.OutputArray.push(new TextInput(input, TextInputType.UserInput));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { TextAdventureComponent } from './text-adventure.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    TextAdventureComponent\r\n  ],\r\n  exports: [\r\n    TextAdventureComponent\r\n  ],\r\n})\r\nexport class TextAdventureModule { }\r\n","/*\r\n * Public API Surface of text-adventure-sama\r\n */\r\n\r\n /* Builders */\r\nexport * from './lib/builder/game.builder';\r\nexport * from './lib/builder/command.builder';\r\nexport * from './lib/builder/inventory.builder';\r\nexport * from './lib/builder/item.builder';\r\nexport * from './lib/builder/scene.builder';\r\n\r\n/* Models */\r\nexport * from './lib/models/game.model';\r\nexport * from './lib/models/interactions/interaction-type.enum';\r\nexport * from './lib/models/scene.model';\r\nexport * from './lib/models/command.model';\r\nexport * from './lib/models/inventory.model';\r\nexport * from './lib/models/item.model';\r\nexport * from './lib/models/stage.model';\r\n\r\n/* ClassificationTrainerInterface */\r\nexport * from './lib/services/classification-trainer.interface';\r\n\r\n\r\n/* Component & Module */\r\nexport * from './lib/text-adventure/text-adventure.module';\r\nexport * from './lib/text-adventure/text-adventure.component';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BaseBuilder as ɵa} from './lib/builder/base.builder';\nexport {InGameItem as ɵb} from './lib/models/Item.model';\nexport {InputParserService as ɵc} from './lib/services/input-parser.service';"]}