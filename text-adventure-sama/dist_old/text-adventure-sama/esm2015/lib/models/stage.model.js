import { GameError } from '../models/errors/game.error';
import { SceneEventService } from '../services/scene-event.service';
/**
 * The Stage contains all scenes (including a pointer to the current scene).
 * It also manages the transition between scenes.
 */
export class Stage {
    constructor() {
        this.ScenePath = [];
        this.Scenes = [];
        SceneEventService.getInstance().GatewayActionEvent$.subscribe((event) => this.OnSceneChange(event));
    }
    OnSceneChange(event) {
        this.goToScene(event.TargetSceneID);
    }
    getCurrentScene() {
        if (!this.CurrentScene) {
            this.CurrentScene = this.Scenes[0];
        }
        return this.CurrentScene;
    }
    goToScene(id) {
        const nextScene = this.Scenes.find(s => s.getID() === id);
        if (!nextScene) {
            throw new GameError('Scene could not be found.');
        }
        this.ScenePath.push(id);
        this.CurrentScene = nextScene;
        return this.CurrentScene;
    }
    addScene(toAdd) {
        this.Scenes.push(toAdd);
    }
    getScenesCount() {
        return this.Scenes.length;
    }
    getScenes() {
        return this.Scenes;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhZ2UubW9kZWwuanMiLCJzb3VyY2VSb290IjoiRTovRG9rdW1lbnRlL1JlcG9zaXRvcmllcy9UZXh0QWR2ZW50dXJlU2FtYS90ZXh0LWFkdmVudHVyZS1zYW1hL3Byb2plY3RzL3RleHQtYWR2ZW50dXJlLXNhbWEvc3JjLyIsInNvdXJjZXMiOlsibGliL21vZGVscy9zdGFnZS5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFHcEU7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLEtBQUs7SUFNZDtRQUNJLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBRWpCLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxDQUFDLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3hHLENBQUM7SUFFRCxhQUFhLENBQUMsS0FBeUI7UUFDbkMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVNLGVBQWU7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDcEIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3RDO1FBQ0QsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzdCLENBQUM7SUFFTSxTQUFTLENBQUMsRUFBVTtRQUN2QixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUMxRCxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ1osTUFBTSxJQUFJLFNBQVMsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO1NBQ3BEO1FBRUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFeEIsSUFBSSxDQUFDLFlBQVksR0FBRyxTQUFTLENBQUM7UUFDOUIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzdCLENBQUM7SUFFTSxRQUFRLENBQUMsS0FBWTtRQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRU0sY0FBYztRQUNqQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBQzlCLENBQUM7SUFFTSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjZW5lIH0gZnJvbSAnLi9zY2VuZS5tb2RlbCc7XHJcbmltcG9ydCB7IEdhbWVFcnJvciB9IGZyb20gJy4uL21vZGVscy9lcnJvcnMvZ2FtZS5lcnJvcic7XHJcbmltcG9ydCB7IFNjZW5lRXZlbnRTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvc2NlbmUtZXZlbnQuc2VydmljZSc7XHJcbmltcG9ydCB7IElHYXRld2F5QWN0aW9uRXZlbnRMaXN0ZW5lciwgR2F0ZXdheUFjdGlvbkV2ZW50IH0gZnJvbSAnLi4vbW9kZWxzL2V2ZW50cy9nYXRld2F5LWFjdGlvbi5ldmVudCc7XHJcblxyXG4vKipcclxuICogVGhlIFN0YWdlIGNvbnRhaW5zIGFsbCBzY2VuZXMgKGluY2x1ZGluZyBhIHBvaW50ZXIgdG8gdGhlIGN1cnJlbnQgc2NlbmUpLlxyXG4gKiBJdCBhbHNvIG1hbmFnZXMgdGhlIHRyYW5zaXRpb24gYmV0d2VlbiBzY2VuZXMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgU3RhZ2UgaW1wbGVtZW50cyBJR2F0ZXdheUFjdGlvbkV2ZW50TGlzdGVuZXIge1xyXG4gICAgcHJpdmF0ZSBTY2VuZXM6IFNjZW5lW107XHJcbiAgICBwcml2YXRlIEN1cnJlbnRTY2VuZTogU2NlbmU7XHJcbiAgICAvLyBwYXRoIHRoZSB1c2VyIHRvb2sgdGhyb3VnaCB0aGUgc2NlbmVzXHJcbiAgICBwcml2YXRlIFNjZW5lUGF0aDogbnVtYmVyW107XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5TY2VuZVBhdGggPSBbXTtcclxuICAgICAgICB0aGlzLlNjZW5lcyA9IFtdO1xyXG5cclxuICAgICAgICBTY2VuZUV2ZW50U2VydmljZS5nZXRJbnN0YW5jZSgpLkdhdGV3YXlBY3Rpb25FdmVudCQuc3Vic2NyaWJlKChldmVudCkgPT4gdGhpcy5PblNjZW5lQ2hhbmdlKGV2ZW50KSk7XHJcbiAgICB9XHJcblxyXG4gICAgT25TY2VuZUNoYW5nZShldmVudDogR2F0ZXdheUFjdGlvbkV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5nb1RvU2NlbmUoZXZlbnQuVGFyZ2V0U2NlbmVJRCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEN1cnJlbnRTY2VuZSgpOiBTY2VuZSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLkN1cnJlbnRTY2VuZSkge1xyXG4gICAgICAgICAgICB0aGlzLkN1cnJlbnRTY2VuZSA9IHRoaXMuU2NlbmVzWzBdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5DdXJyZW50U2NlbmU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdvVG9TY2VuZShpZDogbnVtYmVyKTogU2NlbmUge1xyXG4gICAgICAgIGNvbnN0IG5leHRTY2VuZSA9IHRoaXMuU2NlbmVzLmZpbmQocyA9PiBzLmdldElEKCkgPT09IGlkKTtcclxuICAgICAgICBpZiAoIW5leHRTY2VuZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgR2FtZUVycm9yKCdTY2VuZSBjb3VsZCBub3QgYmUgZm91bmQuJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLlNjZW5lUGF0aC5wdXNoKGlkKTtcclxuXHJcbiAgICAgICAgdGhpcy5DdXJyZW50U2NlbmUgPSBuZXh0U2NlbmU7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuQ3VycmVudFNjZW5lO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhZGRTY2VuZSh0b0FkZDogU2NlbmUpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLlNjZW5lcy5wdXNoKHRvQWRkKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0U2NlbmVzQ291bnQoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5TY2VuZXMubGVuZ3RoO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRTY2VuZXMoKTogU2NlbmVbXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuU2NlbmVzO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==