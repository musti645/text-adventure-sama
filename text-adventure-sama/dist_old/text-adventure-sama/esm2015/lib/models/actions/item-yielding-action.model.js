import { OneTimeAction } from './one-time-action.model';
import { ItemYieldingActionEvent } from '../events/item-yielding-action.event';
import { InteractionType } from '../interactions/interaction-type.enum';
import { ItemEventService } from '../../services/item-event.service';
/**
 * An ItemYieldingAction is only triggered once and adds an Item to the players inventory.
 */
export class ItemYieldingAction extends OneTimeAction {
    constructor() {
        super();
        this.AmountOfItems = 1;
        this.setInteractionType(InteractionType.DO);
    }
    trigger() {
        // trigger addition of item to inventory
        if (this.getWasTriggered()) {
            return this.getResponseAfterUse();
        }
        ItemEventService.getInstance().yieldItem(new ItemYieldingActionEvent(this));
        this.setWasTriggered(true);
        return this.getResponse();
    }
    reset() {
        this.setWasTriggered(false);
    }
    getItem() {
        return this.Item;
    }
    setItem(item) {
        this.Item = item;
    }
    setAmountOfItems(amount) {
        this.AmountOfItems = amount;
    }
    getAmountOfItems() {
        return this.AmountOfItems;
    }
    getResetItemUsagesToMaximum() {
        return this.ResetItemUsagesToMaximum;
    }
    setResetItemUsagesToMaximum(reset) {
        this.ResetItemUsagesToMaximum = reset;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbS15aWVsZGluZy1hY3Rpb24ubW9kZWwuanMiLCJzb3VyY2VSb290IjoiRTovRG9rdW1lbnRlL1JlcG9zaXRvcmllcy9UZXh0QWR2ZW50dXJlU2FtYS90ZXh0LWFkdmVudHVyZS1zYW1hL3Byb2plY3RzL3RleHQtYWR2ZW50dXJlLXNhbWEvc3JjLyIsInNvdXJjZXMiOlsibGliL21vZGVscy9hY3Rpb25zL2l0ZW0teWllbGRpbmctYWN0aW9uLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUV4RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUMvRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDeEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFckU7O0dBRUc7QUFDSCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsYUFBYTtJQUtqRDtRQUNJLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUM7UUFDdkIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRU0sT0FBTztRQUNWLHdDQUF3QztRQUN4QyxJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUUsRUFBRTtZQUN4QixPQUFPLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1NBQ3JDO1FBRUQsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksdUJBQXVCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUU1RSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNCLE9BQU8sSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFTSxLQUFLO1FBQ1IsSUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRU0sT0FBTztRQUNWLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDO0lBRU0sT0FBTyxDQUFDLElBQWdCO1FBQzNCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxnQkFBZ0IsQ0FBQyxNQUFjO1FBQ2xDLElBQUksQ0FBQyxhQUFhLEdBQUcsTUFBTSxDQUFDO0lBQ2hDLENBQUM7SUFFTSxnQkFBZ0I7UUFDbkIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzlCLENBQUM7SUFFTSwyQkFBMkI7UUFDOUIsT0FBTyxJQUFJLENBQUMsd0JBQXdCLENBQUM7SUFDekMsQ0FBQztJQUVNLDJCQUEyQixDQUFDLEtBQWM7UUFDN0MsSUFBSSxDQUFDLHdCQUF3QixHQUFHLEtBQUssQ0FBQztJQUMxQyxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbmVUaW1lQWN0aW9uIH0gZnJvbSAnLi9vbmUtdGltZS1hY3Rpb24ubW9kZWwnO1xyXG5pbXBvcnQgeyBJbkdhbWVJdGVtIH0gZnJvbSAnLi4vSXRlbS5tb2RlbCc7XHJcbmltcG9ydCB7IEl0ZW1ZaWVsZGluZ0FjdGlvbkV2ZW50IH0gZnJvbSAnLi4vZXZlbnRzL2l0ZW0teWllbGRpbmctYWN0aW9uLmV2ZW50JztcclxuaW1wb3J0IHsgSW50ZXJhY3Rpb25UeXBlIH0gZnJvbSAnLi4vaW50ZXJhY3Rpb25zL2ludGVyYWN0aW9uLXR5cGUuZW51bSc7XHJcbmltcG9ydCB7IEl0ZW1FdmVudFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9pdGVtLWV2ZW50LnNlcnZpY2UnO1xyXG5cclxuLyoqXHJcbiAqIEFuIEl0ZW1ZaWVsZGluZ0FjdGlvbiBpcyBvbmx5IHRyaWdnZXJlZCBvbmNlIGFuZCBhZGRzIGFuIEl0ZW0gdG8gdGhlIHBsYXllcnMgaW52ZW50b3J5LlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEl0ZW1ZaWVsZGluZ0FjdGlvbiBleHRlbmRzIE9uZVRpbWVBY3Rpb24ge1xyXG4gICAgcHJpdmF0ZSBJdGVtOiBJbkdhbWVJdGVtO1xyXG4gICAgcHJpdmF0ZSBBbW91bnRPZkl0ZW1zOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIFJlc2V0SXRlbVVzYWdlc1RvTWF4aW11bTogYm9vbGVhbjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuQW1vdW50T2ZJdGVtcyA9IDE7XHJcbiAgICAgICAgdGhpcy5zZXRJbnRlcmFjdGlvblR5cGUoSW50ZXJhY3Rpb25UeXBlLkRPKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdHJpZ2dlcigpOiBzdHJpbmcge1xyXG4gICAgICAgIC8vIHRyaWdnZXIgYWRkaXRpb24gb2YgaXRlbSB0byBpbnZlbnRvcnlcclxuICAgICAgICBpZiAodGhpcy5nZXRXYXNUcmlnZ2VyZWQoKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRSZXNwb25zZUFmdGVyVXNlKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBJdGVtRXZlbnRTZXJ2aWNlLmdldEluc3RhbmNlKCkueWllbGRJdGVtKG5ldyBJdGVtWWllbGRpbmdBY3Rpb25FdmVudCh0aGlzKSk7XHJcblxyXG4gICAgICAgIHRoaXMuc2V0V2FzVHJpZ2dlcmVkKHRydWUpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmdldFJlc3BvbnNlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlc2V0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2V0V2FzVHJpZ2dlcmVkKGZhbHNlKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0SXRlbSgpOiBJbkdhbWVJdGVtIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5JdGVtO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRJdGVtKGl0ZW06IEluR2FtZUl0ZW0pOiB2b2lkIHtcclxuICAgICAgICB0aGlzLkl0ZW0gPSBpdGVtO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRBbW91bnRPZkl0ZW1zKGFtb3VudDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5BbW91bnRPZkl0ZW1zID0gYW1vdW50O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRBbW91bnRPZkl0ZW1zKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuQW1vdW50T2ZJdGVtcztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0UmVzZXRJdGVtVXNhZ2VzVG9NYXhpbXVtKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLlJlc2V0SXRlbVVzYWdlc1RvTWF4aW11bTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0UmVzZXRJdGVtVXNhZ2VzVG9NYXhpbXVtKHJlc2V0OiBib29sZWFuKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5SZXNldEl0ZW1Vc2FnZXNUb01heGltdW0gPSByZXNldDtcclxuICAgIH1cclxufVxyXG4iXX0=