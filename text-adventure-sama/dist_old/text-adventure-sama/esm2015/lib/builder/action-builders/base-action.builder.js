import { BaseBuilder } from '../base.builder';
import { BuilderError } from '../../models/errors/builder.error';
export class BaseActionBuilder extends BaseBuilder {
    constructor(builder, action) {
        super();
        this.Action = action;
        this.Builder = builder;
    }
    setTrigger(trigger) {
        if (!trigger || trigger === '') {
            throw new EvalError('No Trigger found.');
        }
        this.Action.setTrigger(trigger);
        return this;
    }
    setResponse(response) {
        if (!response || response === '') {
            throw new EvalError('No Response found.');
        }
        this.Action.setResponse(response);
        return this;
    }
    setEndGameAction() {
        this.Action.setIsEndGameAction(true);
        return this;
    }
    onFinish() {
    }
    finish() {
        if (!this.Action.getTrigger()) {
            throw new BuilderError('Action creation could not be finished. Trigger was not set.');
        }
        if (!this.Action.getResponse()) {
            throw new BuilderError('Action creation could not be finished. Response was not set.');
        }
        this.onFinish();
        this.Builder.addActionToBuilder(this.Action);
        return this.Builder;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1hY3Rpb24uYnVpbGRlci5qcyIsInNvdXJjZVJvb3QiOiJFOi9Eb2t1bWVudGUvUmVwb3NpdG9yaWVzL1RleHRBZHZlbnR1cmVTYW1hL3RleHQtYWR2ZW50dXJlLXNhbWEvcHJvamVjdHMvdGV4dC1hZHZlbnR1cmUtc2FtYS9zcmMvIiwic291cmNlcyI6WyJsaWIvYnVpbGRlci9hY3Rpb24tYnVpbGRlcnMvYmFzZS1hY3Rpb24uYnVpbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDOUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBRWpFLE1BQU0sT0FBTyxpQkFBdUYsU0FBUSxXQUFXO0lBSW5ILFlBQVksT0FBMEIsRUFBRSxNQUFTO1FBQzdDLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDM0IsQ0FBQztJQUVNLFVBQVUsQ0FBQyxPQUFlO1FBQzdCLElBQUksQ0FBQyxPQUFPLElBQUksT0FBTyxLQUFLLEVBQUUsRUFBRTtZQUM1QixNQUFNLElBQUksU0FBUyxDQUFDLG1CQUFtQixDQUFDLENBQUM7U0FDNUM7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoQyxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0sV0FBVyxDQUFDLFFBQWdCO1FBQy9CLElBQUksQ0FBQyxRQUFRLElBQUksUUFBUSxLQUFLLEVBQUUsRUFBRTtZQUM5QixNQUFNLElBQUksU0FBUyxDQUFDLG9CQUFvQixDQUFDLENBQUM7U0FDN0M7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNsQyxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0sZ0JBQWdCO1FBQ25CLElBQUksQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVNLFFBQVE7SUFDZixDQUFDO0lBRU0sTUFBTTtRQUNULElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxFQUFFO1lBQzNCLE1BQU0sSUFBSSxZQUFZLENBQUMsNkRBQTZELENBQUMsQ0FBQztTQUN6RjtRQUVELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxFQUFFO1lBQzVCLE1BQU0sSUFBSSxZQUFZLENBQUMsOERBQThELENBQUMsQ0FBQztTQUMxRjtRQUVELElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVoQixJQUFJLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3QyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDeEIsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2FjdGlvbnMvYWN0aW9uLm1vZGVsJztcclxuaW1wb3J0IHsgQWN0aW9uQ29udGFpbmluZ0J1aWxkZXIgfSBmcm9tICcuLi9pbnRlcmZhY2VzL2FjdGlvbi1jb250YWluaW5nLmJ1aWxkZXInO1xyXG5pbXBvcnQgeyBCYXNlQnVpbGRlciB9IGZyb20gJy4uL2Jhc2UuYnVpbGRlcic7XHJcbmltcG9ydCB7IEJ1aWxkZXJFcnJvciB9IGZyb20gJy4uLy4uL21vZGVscy9lcnJvcnMvYnVpbGRlci5lcnJvcic7XHJcblxyXG5leHBvcnQgY2xhc3MgQmFzZUFjdGlvbkJ1aWxkZXI8VCBleHRlbmRzIEFjdGlvbiwgUmV0dXJuQnVpbGRlclR5cGUgZXh0ZW5kcyBBY3Rpb25Db250YWluaW5nQnVpbGRlcj4gZXh0ZW5kcyBCYXNlQnVpbGRlciB7XHJcbiAgICBwcm90ZWN0ZWQgQWN0aW9uOiBUO1xyXG4gICAgcHJvdGVjdGVkIEJ1aWxkZXI6IFJldHVybkJ1aWxkZXJUeXBlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGJ1aWxkZXI6IFJldHVybkJ1aWxkZXJUeXBlLCBhY3Rpb246IFQpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuQWN0aW9uID0gYWN0aW9uO1xyXG4gICAgICAgIHRoaXMuQnVpbGRlciA9IGJ1aWxkZXI7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldFRyaWdnZXIodHJpZ2dlcjogc3RyaW5nKTogdGhpcyB7XHJcbiAgICAgICAgaWYgKCF0cmlnZ2VyIHx8IHRyaWdnZXIgPT09ICcnKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFdmFsRXJyb3IoJ05vIFRyaWdnZXIgZm91bmQuJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLkFjdGlvbi5zZXRUcmlnZ2VyKHRyaWdnZXIpO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRSZXNwb25zZShyZXNwb25zZTogc3RyaW5nKTogdGhpcyB7XHJcbiAgICAgICAgaWYgKCFyZXNwb25zZSB8fCByZXNwb25zZSA9PT0gJycpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEV2YWxFcnJvcignTm8gUmVzcG9uc2UgZm91bmQuJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLkFjdGlvbi5zZXRSZXNwb25zZShyZXNwb25zZSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldEVuZEdhbWVBY3Rpb24oKTogdGhpcyB7XHJcbiAgICAgICAgdGhpcy5BY3Rpb24uc2V0SXNFbmRHYW1lQWN0aW9uKHRydWUpO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvbkZpbmlzaCgpOiB2b2lkIHtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZmluaXNoKCk6IFJldHVybkJ1aWxkZXJUeXBlIHtcclxuICAgICAgICBpZiAoIXRoaXMuQWN0aW9uLmdldFRyaWdnZXIoKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgQnVpbGRlckVycm9yKCdBY3Rpb24gY3JlYXRpb24gY291bGQgbm90IGJlIGZpbmlzaGVkLiBUcmlnZ2VyIHdhcyBub3Qgc2V0LicpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLkFjdGlvbi5nZXRSZXNwb25zZSgpKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBCdWlsZGVyRXJyb3IoJ0FjdGlvbiBjcmVhdGlvbiBjb3VsZCBub3QgYmUgZmluaXNoZWQuIFJlc3BvbnNlIHdhcyBub3Qgc2V0LicpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5vbkZpbmlzaCgpO1xyXG5cclxuICAgICAgICB0aGlzLkJ1aWxkZXIuYWRkQWN0aW9uVG9CdWlsZGVyKHRoaXMuQWN0aW9uKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5CdWlsZGVyO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=