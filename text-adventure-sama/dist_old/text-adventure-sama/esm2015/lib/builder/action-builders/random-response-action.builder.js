import { BaseActionBuilder } from './base-action.builder';
import { RandomResponseAction } from '../../models/actions/random-response-action.model';
import { InteractionType } from '../../models/interactions/interaction-type.enum';
import { BuilderError } from '../../models/errors/builder.error';
export class RandomResponseActionBuilder extends BaseActionBuilder {
    constructor(builder) {
        super(builder, new RandomResponseAction());
    }
    setResponses(responses) {
        if (!responses) {
            throw new EvalError('Invalid Value for Responses. Has to be an Array of Strings.');
        }
        if (responses.length === 0) {
            throw new EvalError('Responses Array may not be empty.');
        }
        this.Action.setResponses(responses);
        return this;
    }
    setInteractionType(type) {
        if (!type || !Object.values(InteractionType).includes(type)) {
            throw new EvalError('InteractionType not set.');
        }
        this.Action.setInteractionType(type);
        return this;
    }
    onFinish() {
        if (!this.Action.getResponses()) {
            throw new BuilderError('Action creation could not be finished. Responses Array was not set.');
        }
        if (!this.Action.getInteractionType()) {
            throw new BuilderError('Action creation could not be finished. InteractionType was not set.');
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZG9tLXJlc3BvbnNlLWFjdGlvbi5idWlsZGVyLmpzIiwic291cmNlUm9vdCI6IkU6L0Rva3VtZW50ZS9SZXBvc2l0b3JpZXMvVGV4dEFkdmVudHVyZVNhbWEvdGV4dC1hZHZlbnR1cmUtc2FtYS9wcm9qZWN0cy90ZXh0LWFkdmVudHVyZS1zYW1hL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9idWlsZGVyL2FjdGlvbi1idWlsZGVycy9yYW5kb20tcmVzcG9uc2UtYWN0aW9uLmJ1aWxkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFMUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDekYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUlqRSxNQUFNLE9BQU8sMkJBQ1QsU0FBUSxpQkFBMEQ7SUFFbEUsWUFBWSxPQUEwQjtRQUNsQyxLQUFLLENBQUMsT0FBTyxFQUFFLElBQUksb0JBQW9CLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFTSxZQUFZLENBQUMsU0FBbUI7UUFDbkMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNaLE1BQU0sSUFBSSxTQUFTLENBQUMsNkRBQTZELENBQUMsQ0FBQztTQUN0RjtRQUVELElBQUksU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDeEIsTUFBTSxJQUFJLFNBQVMsQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDO1NBQzVEO1FBRUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVNLGtCQUFrQixDQUFDLElBQXFCO1FBQzNDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUN6RCxNQUFNLElBQUksU0FBUyxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDbkQ7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxRQUFRO1FBQ1gsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLEVBQUU7WUFDN0IsTUFBTSxJQUFJLFlBQVksQ0FBQyxxRUFBcUUsQ0FBQyxDQUFDO1NBQ2pHO1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsa0JBQWtCLEVBQUUsRUFBRTtZQUNuQyxNQUFNLElBQUksWUFBWSxDQUFDLHFFQUFxRSxDQUFDLENBQUM7U0FDakc7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlQWN0aW9uQnVpbGRlciB9IGZyb20gJy4vYmFzZS1hY3Rpb24uYnVpbGRlcic7XHJcbmltcG9ydCB7IEFjdGlvbkNvbnRhaW5pbmdCdWlsZGVyIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9hY3Rpb24tY29udGFpbmluZy5idWlsZGVyJztcclxuaW1wb3J0IHsgUmFuZG9tUmVzcG9uc2VBY3Rpb24gfSBmcm9tICcuLi8uLi9tb2RlbHMvYWN0aW9ucy9yYW5kb20tcmVzcG9uc2UtYWN0aW9uLm1vZGVsJztcclxuaW1wb3J0IHsgSW50ZXJhY3Rpb25UeXBlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2ludGVyYWN0aW9ucy9pbnRlcmFjdGlvbi10eXBlLmVudW0nO1xyXG5pbXBvcnQgeyBCdWlsZGVyRXJyb3IgfSBmcm9tICcuLi8uLi9tb2RlbHMvZXJyb3JzL2J1aWxkZXIuZXJyb3InO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgUmFuZG9tUmVzcG9uc2VBY3Rpb25CdWlsZGVyPFJldHVybkJ1aWxkZXJUeXBlIGV4dGVuZHMgQWN0aW9uQ29udGFpbmluZ0J1aWxkZXI+XHJcbiAgICBleHRlbmRzIEJhc2VBY3Rpb25CdWlsZGVyPFJhbmRvbVJlc3BvbnNlQWN0aW9uLCBSZXR1cm5CdWlsZGVyVHlwZT4ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGJ1aWxkZXI6IFJldHVybkJ1aWxkZXJUeXBlKSB7XHJcbiAgICAgICAgc3VwZXIoYnVpbGRlciwgbmV3IFJhbmRvbVJlc3BvbnNlQWN0aW9uKCkpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRSZXNwb25zZXMocmVzcG9uc2VzOiBzdHJpbmdbXSk6IHRoaXMge1xyXG4gICAgICAgIGlmICghcmVzcG9uc2VzKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFdmFsRXJyb3IoJ0ludmFsaWQgVmFsdWUgZm9yIFJlc3BvbnNlcy4gSGFzIHRvIGJlIGFuIEFycmF5IG9mIFN0cmluZ3MuJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAocmVzcG9uc2VzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXZhbEVycm9yKCdSZXNwb25zZXMgQXJyYXkgbWF5IG5vdCBiZSBlbXB0eS4nKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuQWN0aW9uLnNldFJlc3BvbnNlcyhyZXNwb25zZXMpO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRJbnRlcmFjdGlvblR5cGUodHlwZTogSW50ZXJhY3Rpb25UeXBlKTogdGhpcyB7XHJcbiAgICAgICAgaWYgKCF0eXBlIHx8ICFPYmplY3QudmFsdWVzKEludGVyYWN0aW9uVHlwZSkuaW5jbHVkZXModHlwZSkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEV2YWxFcnJvcignSW50ZXJhY3Rpb25UeXBlIG5vdCBzZXQuJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLkFjdGlvbi5zZXRJbnRlcmFjdGlvblR5cGUodHlwZSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uRmluaXNoKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICghdGhpcy5BY3Rpb24uZ2V0UmVzcG9uc2VzKCkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEJ1aWxkZXJFcnJvcignQWN0aW9uIGNyZWF0aW9uIGNvdWxkIG5vdCBiZSBmaW5pc2hlZC4gUmVzcG9uc2VzIEFycmF5IHdhcyBub3Qgc2V0LicpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLkFjdGlvbi5nZXRJbnRlcmFjdGlvblR5cGUoKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgQnVpbGRlckVycm9yKCdBY3Rpb24gY3JlYXRpb24gY291bGQgbm90IGJlIGZpbmlzaGVkLiBJbnRlcmFjdGlvblR5cGUgd2FzIG5vdCBzZXQuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==