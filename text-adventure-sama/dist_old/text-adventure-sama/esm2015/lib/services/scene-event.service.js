import { Subject } from 'rxjs';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Singleton Service handling Scene Events
 */
export class SceneEventService {
    constructor() {
        this.GatewayActionEventSource = new Subject();
        this.GatewayActionEvent$ = this.GatewayActionEventSource.asObservable();
    }
    static getInstance() {
        if (!SceneEventService.Instance) {
            SceneEventService.Instance = new SceneEventService();
        }
        return SceneEventService.Instance;
    }
    changeScene(event) {
        this.GatewayActionEventSource.next(event);
    }
}
SceneEventService.Instance = undefined;
SceneEventService.ɵprov = i0.ɵɵdefineInjectable({ factory: function SceneEventService_Factory() { return new SceneEventService(); }, token: SceneEventService, providedIn: "root" });
SceneEventService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
SceneEventService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NlbmUtZXZlbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJFOi9Eb2t1bWVudGUvUmVwb3NpdG9yaWVzL1RleHRBZHZlbnR1cmVTYW1hL3RleHQtYWR2ZW50dXJlLXNhbWEvcHJvamVjdHMvdGV4dC1hZHZlbnR1cmUtc2FtYS9zcmMvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvc2NlbmUtZXZlbnQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQy9CLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBRTNDOztHQUVHO0FBSUgsTUFBTSxPQUFPLGlCQUFpQjtJQUUxQjtRQUtRLDZCQUF3QixHQUFHLElBQUksT0FBTyxFQUFzQixDQUFDO1FBRTlELHdCQUFtQixHQUFHLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQU4xRSxDQUFDO0lBUU0sTUFBTSxDQUFDLFdBQVc7UUFDckIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsRUFBRTtZQUM3QixpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO1NBQ3hEO1FBRUQsT0FBTyxpQkFBaUIsQ0FBQyxRQUFRLENBQUM7SUFDdEMsQ0FBQztJQUVNLFdBQVcsQ0FBQyxLQUF5QjtRQUN4QyxJQUFJLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlDLENBQUM7O0FBaEJjLDBCQUFRLEdBQXNCLFNBQVMsQ0FBQzs7O1lBUjFELFVBQVUsU0FBQztnQkFDUixVQUFVLEVBQUUsTUFBTTthQUNyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElHYXRld2F5QWN0aW9uRXZlbnRTZXJ2aWNlLCBHYXRld2F5QWN0aW9uRXZlbnQgfSBmcm9tICcuLi9tb2RlbHMvZXZlbnRzL2dhdGV3YXktYWN0aW9uLmV2ZW50JztcclxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG4vKipcclxuICogU2luZ2xldG9uIFNlcnZpY2UgaGFuZGxpbmcgU2NlbmUgRXZlbnRzXHJcbiAqL1xyXG5ASW5qZWN0YWJsZSh7XHJcbiAgICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIFNjZW5lRXZlbnRTZXJ2aWNlIGltcGxlbWVudHMgSUdhdGV3YXlBY3Rpb25FdmVudFNlcnZpY2Uge1xyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgSW5zdGFuY2U6IFNjZW5lRXZlbnRTZXJ2aWNlID0gdW5kZWZpbmVkO1xyXG5cclxuICAgIHByaXZhdGUgR2F0ZXdheUFjdGlvbkV2ZW50U291cmNlID0gbmV3IFN1YmplY3Q8R2F0ZXdheUFjdGlvbkV2ZW50PigpO1xyXG5cclxuICAgIHB1YmxpYyBHYXRld2F5QWN0aW9uRXZlbnQkID0gdGhpcy5HYXRld2F5QWN0aW9uRXZlbnRTb3VyY2UuYXNPYnNlcnZhYmxlKCk7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBTY2VuZUV2ZW50U2VydmljZSB7XHJcbiAgICAgICAgaWYgKCFTY2VuZUV2ZW50U2VydmljZS5JbnN0YW5jZSkge1xyXG4gICAgICAgICAgICBTY2VuZUV2ZW50U2VydmljZS5JbnN0YW5jZSA9IG5ldyBTY2VuZUV2ZW50U2VydmljZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIFNjZW5lRXZlbnRTZXJ2aWNlLkluc3RhbmNlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjaGFuZ2VTY2VuZShldmVudDogR2F0ZXdheUFjdGlvbkV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5HYXRld2F5QWN0aW9uRXZlbnRTb3VyY2UubmV4dChldmVudCk7XHJcbiAgICB9XHJcbn1cclxuIl19